[{"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\index.js":"1","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\App.js":"2","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js":"3","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js":"4","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js":"5","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js":"6","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js":"7","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js":"8","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js":"9","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js":"10","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js":"11","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\signOut.js":"12","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js":"13","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js":"14","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js":"15","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js":"16","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\keys.js":"17","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\index.js":"18","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\ImgHolder.js":"19","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\AdminButton.js":"20"},{"size":396,"mtime":1614627354488,"results":"21","hashOfConfig":"22"},{"size":1882,"mtime":1616710076350,"results":"23","hashOfConfig":"22"},{"size":1516,"mtime":1614634863716,"results":"24","hashOfConfig":"22"},{"size":3889,"mtime":1616707488320,"results":"25","hashOfConfig":"22"},{"size":2329,"mtime":1614646676051,"results":"26","hashOfConfig":"22"},{"size":3328,"mtime":1614712204528,"results":"27","hashOfConfig":"22"},{"size":1181,"mtime":1616533895926,"results":"28","hashOfConfig":"22"},{"size":3759,"mtime":1614630217616,"results":"29","hashOfConfig":"22"},{"size":4238,"mtime":1616712578096,"results":"30","hashOfConfig":"22"},{"size":688,"mtime":1614635844266,"results":"31","hashOfConfig":"22"},{"size":472,"mtime":1614630179916,"results":"32","hashOfConfig":"22"},{"size":643,"mtime":1614630418476,"results":"33","hashOfConfig":"22"},{"size":542,"mtime":1614626373185,"results":"34","hashOfConfig":"22"},{"size":643,"mtime":1614630418476,"results":"35","hashOfConfig":"22"},{"size":12131,"mtime":1616705386149,"results":"36","hashOfConfig":"22"},{"size":1519,"mtime":1616701809163,"results":"37","hashOfConfig":"22"},{"size":189,"mtime":1616698123783,"results":"38","hashOfConfig":"22"},{"size":1057,"mtime":1616712544388,"results":"39","hashOfConfig":"22"},{"size":558,"mtime":1616711519295,"results":"40","hashOfConfig":"22"},{"size":984,"mtime":1616707344746,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"8inv6o",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\index.js",[],["94","95"],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\App.js",["96"],"import \"./App.css\";\r\nimport React from \"react\";\r\nimport Nav from \"./components/Header\";\r\nimport { ThemeProvider, Grid, Paper } from \"@material-ui/core\";\r\nimport theme from \"./components/Theme\";\r\nimport useStyles from \"./components/Styles\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport AuthState from \"./AuthForm/isAuthContext\";\r\nimport Jumbotron from './components/Jumbotron'\r\nimport ImageUploader from \"./components/ImageUploader/index.js\";\r\nimport Gallery from \"./components/Gallery\";\r\nimport AdminButton from \"./components/AdminButton\";\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={theme}>\r\n        <AuthState>\r\n          <Grid container direction=\"column\" spacing={3} xs={12}>\r\n            {/* nav container */}\r\n            <Nav className={classes.nav}/>\r\n            \r\n\r\n                <Jumbotron/>\r\n             \r\n            {/* tagline container */}\r\n            <Grid item xs={12} container>\r\n              <Grid item xs={0} sm={2} />\r\n              <Grid item xs={12} sm={12} lg={12}>\r\n\r\n              </Grid>\r\n              <Grid item xs={0} sm={2} />\r\n            </Grid>\r\n              <Gallery/>\r\n            {/* content container */}\r\n            \r\n              <ImageUploader/>\r\n              \r\n            \r\n            {/* auth form container */}\r\n            <Grid item xs={12} container>\r\n              <Grid item xs={0} sm={2} md={3} lr={4} />\r\n              <Grid item xs={12} sm={8} md={6} lr={4}>\r\n                <Paper className={classes.paper}>\r\n                  \r\n                  {/* <AuthForm /> */}\r\n                  <AdminButton/>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={0} sm={2} md={3} lr={4} />\r\n            </Grid>\r\n          </Grid>\r\n        </AuthState>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js",["97"],"import { createMuiTheme } from '@material-ui/core';\r\nimport { orange, lightGreen, grey } from '@material-ui/core/colors';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: orange[500]\r\n\r\n        },\r\n        secondary: {\r\n            main: '#38393A'\r\n        },\r\n        type: \"dark\",\r\n\r\n    }\r\n});\r\n\r\ntheme.props = {\r\n    MuiButton: {\r\n        disableElevation: false\r\n    },\r\n    MuiTooltip: {\r\n        arrow: true\r\n    },\r\n    MuiInput: {\r\n   disableUnderline: true,\r\n    },\r\n\r\n\r\n\r\n};\r\n\r\ntheme.overrides = {\r\n    MuiButton: {\r\n        root: {\r\n            backgroundColor: orange[500],\r\n            '&:hover': {\r\n                backgroundColor: orange[300],\r\n            },\r\n\r\n        },\r\n        containedPrimary: {\r\n            backgroundColor: orange[300],\r\n            '&:hover': {\r\n                backgroundColor: orange[500],\r\n            },\r\n\r\n        },\r\n        containedSecondary: {\r\n            backgroundColor: '#38393A',\r\n            '&:hover': {\r\n                backgroundColor: '#808081',\r\n            }\r\n        }\r\n    },\r\n    MuiTooltip: {\r\n        tooltip: {\r\n           \r\n            border: `2px solid ${theme.palette.primary.main}`,\r\n            color: theme.palette.primary.main\r\n        },\r\n        arrow: {\r\n            color: theme.palette.primary.main\r\n        }\r\n    },\r\n    MuiInput:{\r\n        root:{\r\n            top: theme.spacing(2),\r\n            border: `1px solid ${grey[500]}`,\r\n        }\r\n    },\r\n    \r\n\r\n\r\n}\r\n\r\nexport default theme;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js",["98"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport SignIn from \"./SignIn\";\r\nimport SignUp from \"./SignUp\";\r\n\r\nimport { IsAuthContext } from \"./isAuthContext\";\r\n\r\nconst AuthForm = (props) => {\r\n\r\n  \r\n    // ------------------------------- Auth -------------------------------------------------\r\n  const initialFormState = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  // Set up our useState hook\r\n  const [formState, setFormState] = useState(initialFormState);\r\n\r\n  // Bring in our global context items for checking authorization status\r\n  const { checkAuth } = useContext(IsAuthContext);\r\n\r\n  // On change event handler\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    setFormState({ ...formState, [name]: value });\r\n  };\r\n\r\n  //  Sign In button handler\r\n  const submitSignIn = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formState;\r\n    setHelperText(initialHelperState);\r\n    console.log({ email: email, password: password });\r\n\r\n    API.signIn({ email: email, password: password }).then(({ data }) => {\r\n        console.log(\"data: \", data);\r\n        errorHandler(data);\r\n        checkAuth();\r\n    });\r\n  };\r\n  //  Sign Up button handler\r\n\r\n  const submitSignUp = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, password, password_confirmation } = formState;\r\n    setHelperText(initialHelperState);\r\n    console.log({ email: email, password: password });\r\n\r\n    API.signUp({\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      password_confirmation: password_confirmation,\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      errorHandler(res.data);\r\n      checkAuth();\r\n      \r\n    });\r\n  };\r\n  // ----------------------- Form switch -----------------------------\r\n\r\n  const [formType, setFormType] = useState(\"signIn\");\r\n  \r\n  // Function for switching between forms\r\n  const switchForm = (e) => {\r\n    e.preventDefault();\r\n    setHelperText(initialHelperState)\r\n    setFormType(e.target.name);\r\n  };\r\n\r\n  // ----------------------- Error handling -----------------------------\r\n\r\n  const initialHelperState = {\r\n        error: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\"\r\n  };\r\n  const [helperText, setHelperText] = useState(initialHelperState);\r\n\r\n  \r\n  const errorHandler =  (res) => {\r\n    const  error =  res.errors;\r\n    console.log(\"current errors: \", error);\r\n    console.log(\"current text: \", helperText);\r\n    // if we have errors we push them to our helperText state\r\n    if (error){\r\n        error.forEach(err => {\r\n            if (err.error) {setHelperText({...helperText, error: err.error})}\r\n            if (err.email) {setHelperText({...helperText,email: err.email})}\r\n            if (err.password) {setHelperText({...helperText, password: err.password})}\r\n            if (err.passwordConfirm) {setHelperText({...helperText, passwordConfirm: err.passwordConfirm})}\r\n             \r\n        });\r\n    } else {\r\n      props.onSub()\r\n    }\r\n   \r\n  };\r\n \r\n  const { error, email, password, passwordConfirm } = helperText;\r\n  \r\n  return (\r\n    <div>\r\n      {formType === \"signIn\" && (\r\n        <SignIn\r\n          handleInputChange={handleInputChange}\r\n          submit={submitSignIn}\r\n          switch={switchForm}\r\n          helper={helperText}\r\n          errorHelper={error}\r\n          emailHelper={email}\r\n          passwordHelper={password}\r\n\r\n        />\r\n      )}\r\n      {formType === \"signUp\" && (\r\n        <SignUp\r\n          handleInputChange={handleInputChange}\r\n          submit={submitSignUp}\r\n          switch={switchForm}\r\n          helper={helperText}\r\n          errorHelper={error}\r\n          emailHelper={email}\r\n          passwordHelper={password}\r\n          passwordConfirmHelper={passwordConfirm}\r\n\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js",["99"],"import React, {useState, useEffect} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst SignIn = (props) => {\r\n  const initialErrorFields = {\r\n    error: false,\r\n    email: false,\r\n    password: false,\r\n};\r\n  const [errorFields, setErrorFields] = useState(initialErrorFields)\r\n\r\n  const checkError = () => {\r\n    \r\n    if(props.errorHelper !== \"\"){\r\n      setErrorFields({error: true, email: true, password: true})\r\n    }\r\n    if(props.emailHelper !== \"\"){\r\n      setErrorFields({...errorFields, email: true})\r\n    }\r\n    if(props.passwordHelper !== \"\"){\r\n      setErrorFields({...errorFields, password: true})\r\n    }\r\n     \r\n  }\r\n  useEffect(() => {\r\n    setErrorFields(initialErrorFields);\r\n    checkError()\r\n  }, [props.helper])\r\n  \r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Sign In</Typography>\r\n      <form noValidate>\r\n        {\r\n        props.errorHelper !== \"\" && \r\n        <Alert severity=\"error\">{props.errorHelper}</Alert>\r\n        }\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          error={errorFields.email}\r\n          helperText={props.emailHelper}\r\n          fullWidth\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          onChange={props.handleInputChange}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          error={errorFields.password}\r\n          helperText={props.passwordHelper}\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          onChange={props.handleInputChange}\r\n        />\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          onClick={props.submit}\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <Link variant=\"body2\" name=\"signUp\" onClick={props.switch}>\r\n          {\"Don't have an account? Sign Up\"}\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js",["100"],"import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Grid, Link } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst SignUp = (props) => {\r\n  const initialErrorFields = {\r\n    error: false,\r\n    email: false,\r\n    name: false,\r\n    password: false,\r\n    passwordConfirm: false\r\n  };\r\n  const [errorFields, setErrorFields] = useState(initialErrorFields);\r\n\r\n  const checkError = () => {\r\n    if (props.errorHelper !== \"\") {\r\n      setErrorFields({\r\n        error: true,\r\n        email: true,\r\n        name: true,\r\n        password: true,\r\n        passwordConfirm: true,\r\n      });\r\n    }\r\n    if (props.emailHelper !== \"\") {\r\n      setErrorFields({ ...errorFields, email: true });\r\n    }\r\n    if (props.passwordHelper !== \"\") {\r\n      setErrorFields({ ...errorFields, password: true });\r\n    }\r\n    if (props.passwordConfirmHelper !== \"\") {\r\n      setErrorFields({ ...errorFields, password: true, passwordConfirm: true });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setErrorFields(initialErrorFields);\r\n    checkError();\r\n  }, [props.helper]);\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Sign Up</Typography>\r\n      <form noValidate>\r\n        <Grid>\r\n          {props.errorHelper !== \"\" && (\r\n            <Alert severity=\"error\">{props.errorHelper}</Alert>\r\n          )}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.name}\r\n            helperText={props.emailHelper}\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            autoFocus\r\n            onChange={props.handleInputChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.email}\r\n            helperText={props.emailHelper}\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={props.handleInputChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.password}\r\n            helperText={props.passwordHelper}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={props.handleInputChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.passwordConfirm}\r\n            helperText={props.passwordConfirmHelper}\r\n            name=\"password_confirmation\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            onChange={props.handleInputChange}\r\n          />\r\n        </Grid>\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          onClick={props.submit}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n        <Link variant=\"body2\" name=\"signIn\" onClick={props.switch}>\r\n          {\"Already have an account? Sign In\"}\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js",["101"],"\r\nimport React, { useState, createContext, useEffect, useReducer } from \"react\";\r\nimport API from '../utils/API'\r\nimport isAuthReducer from '../reducers/isAuthReducer'\r\n\r\nconst AuthState = ({ children }) => {\r\n \r\nconst [state, dispatch] = useReducer(isAuthReducer, {isAuth: undefined})\r\n\r\nconst checkAuth = () => {\r\n  API.checkAuth().then((data) => {\r\n    console.log(\"checkAuth func: \", data.data);\r\n    dispatch({type: data.data})\r\n  })\r\n}\r\nuseEffect(() => {\r\n checkAuth()\r\n}, [])\r\n\r\n  return (\r\n    <IsAuthContext.Provider value={{state, checkAuth}}>\r\n      {children}\r\n    </IsAuthContext.Provider>\r\n  );\r\n};\r\nexport const IsAuthContext = createContext();\r\nexport default AuthState;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\signOut.js",["102"],"import React, {  useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from '../utils/API'\r\nimport { IsAuthContext } from \"./isAuthContext\";\r\n\r\nconst SignOut = () => {\r\n  const {state, checkAuth} = useContext(IsAuthContext);\r\n\r\n  const submitSignOut = (e) => {\r\n    API.signOut().then((res) => {\r\n        console.log(res);\r\n        \r\n    }).then(() => {\r\n      checkAuth();\r\n    })\r\n}\r\n  return (\r\n    \r\n      <Button\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        \r\n        variant=\"contained\"\r\n        onClick={submitSignOut}\r\n      >\r\n        Sign out\r\n      </Button>\r\n   \r\n  );\r\n};\r\n\r\nexport default SignOut;\r\n",["103","104"],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js",["105"],"import React, { useState, useEffect } from \"react\";\r\nimport UploadBox from \"./UploadBox\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles\";\r\nimport Keys from \"../../utils/keys\";\r\nimport { uploadFile } from \"react-s3\";\r\nimport API from \"../../utils/API\";\r\n\r\nconst ImageUploader = () => {\r\n  const classes = useStyles();\r\n\r\n  const accessKey = Keys.access;\r\n  const secretKey = Keys.secret;\r\n\r\n  const config = {\r\n    bucketName: \"atl-animal-activists-bucket\",\r\n    region: \"us-east-1\",\r\n    dirName: \"photos\",\r\n    accessKeyId: accessKey,\r\n    secretAccessKey: secretKey,\r\n  };\r\n\r\n  // set two different states for img URL and name to make state management more flexible\r\n  // (cant get name change to not erase current url and cant do duble destructuring to my knoledge, fastest fix for the moment)\r\n  let initialImgURLState = {\r\n    img1: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img2: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img3: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img4: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img5: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img6: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img7: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img8: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img9: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n  };\r\n  let initialImgNameState = {\r\n    img1: {\r\n      name: \"\",\r\n    },\r\n    img2: {\r\n      name: \"\",\r\n    },\r\n    img3: {\r\n      name: \"\",\r\n    },\r\n    img4: {\r\n      name: \"\",\r\n    },\r\n    img5: {\r\n      name: \"\",\r\n    },\r\n    img6: {\r\n      name: \"\",\r\n    },\r\n    img7: {\r\n      name: \"\",\r\n    },\r\n    img8: {\r\n      name: \"\",\r\n    },\r\n    img9: {\r\n      name: \"\",\r\n    },\r\n  };\r\n  let initialCurrentImgState = [\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n  ];\r\n\r\n  const [imgURLState, setImgURLState] = useState(initialImgURLState);\r\n  const [imgNameState, setImgNameState] = useState(initialImgNameState);\r\n  const [currentImgs, setCurrentImgs] = useState(initialCurrentImgState);\r\n\r\n  useEffect(() => {\r\n    // get all images and set to current\r\n    API.getAllImgs().then(({ data }) => {\r\n      if (data.length > 0) {\r\n        console.log(\"all imgs: \", data);\r\n        \r\n        let newArr = [...currentImgs]\r\n        data.forEach((img, i) => {\r\n          console.log(img,i);\r\n          newArr[i] = img\r\n        });\r\n        setCurrentImgs(newArr);\r\n      } else {\r\n        return;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(imgURLState, imgNameState, currentImgs);\r\n  // }, [imgURLState, imgNameState, currentImgs]);\r\n  // ---------------- handle Image change ---------------------\r\n  const handleImgChange = ({ target: { name, files } }) => {\r\n    console.log(files[0], name);\r\n    // here is where the two states get called upon\r\n    setImgURLState({\r\n      ...imgURLState,\r\n      [name]: {\r\n        url: URL.createObjectURL(files[0]),\r\n        file: files[0],\r\n      },\r\n    });\r\n    setImgNameState({\r\n      ...imgNameState,\r\n      [name]: {\r\n        name: files[0].name,\r\n      },\r\n    });\r\n  };\r\n  // ---------------- Handle Image Name change ---------------------\r\n\r\n  const handleNameChange = ({ target: { name, value } }) => {\r\n    // here is where I cannot figure out how to duble destructure the URL so it wont get replaced if it were to be a single state component\r\n    setImgNameState({\r\n      ...imgNameState,\r\n      [name]: {\r\n        name: value,\r\n      },\r\n    });\r\n  };\r\n  // ---------------- submit image ---------------------\r\n\r\n  const submitHandler = ({ target: { parentNode } }) => {\r\n    console.log(\"parent: \", parentNode.name);\r\n    const imgname = parentNode.name;\r\n\r\n    let { file } = imgURLState[imgname];\r\n    let { name } = imgNameState[imgname];\r\n\r\n    // upload to s-3 bucket\r\n    if (file && name) {\r\n      uploadFile(file, config)\r\n        .then((data) => {\r\n          //  save to db\r\n          API.uploadImg({\r\n            url: data.location,\r\n            name: name,\r\n            location: imgname,\r\n          }).then(() => {\r\n            console.log(\"Saved!\");\r\n          });\r\n        })\r\n        .catch((err) => console.error(err));\r\n    } else if (!file && name) {\r\n      // if no img added just change the name\r\n      API.uploadImg({\r\n        name: name,\r\n        location: imgname,\r\n      }).then(() => {\r\n        console.log(\"Saved!\");\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Grid item xs={12} className={classes.imgboxContainer} container>\r\n        \r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          \r\n          <div className={classes.paper}>\r\n          \r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img1.url ||\r\n                currentImgs[0].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img1.name || currentImgs[0].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img1\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file1\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img2.url ||\r\n                currentImgs[1].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img2.name || currentImgs[1].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img2\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file2\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img3.url ||\r\n                currentImgs[2].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img3.name || currentImgs[2].name}\r\n              handleNameChange={handleNameChange}\r\n              handleImgChange={handleImgChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img3\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file3\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* -------------------------- next set of uploaders ------------------------------------------ */}\r\n      <Grid item xs={12} className={classes.imgboxContainer} container>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            {}\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img4.url ||\r\n                currentImgs[3].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img4.name || currentImgs[3].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img4\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file4\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img5.url ||\r\n                currentImgs[4].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img5.name || currentImgs[4].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img5\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file5\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img6.url ||\r\n                currentImgs[5].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img6.name || currentImgs[5].name}\r\n              handleNameChange={handleNameChange}\r\n              handleImgChange={handleImgChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img6\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file6\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      {/* -------------------------- next set of uploaders ------------------------------------------ */}\r\n      <Grid item xs={12}  className={classes.imgboxContainer} container>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            {}\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img7.url ||\r\n                currentImgs[6].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img7.name || currentImgs[6].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img7\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file7\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img8.url ||\r\n                currentImgs[7].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img8.name || currentImgs[7].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img8\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file8\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img9.url ||\r\n                currentImgs[8].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img9.name || currentImgs[8].name}\r\n              handleNameChange={handleNameChange}\r\n              handleImgChange={handleImgChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img9\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file9\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\keys.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\index.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\ImgHolder.js",["106","107"],"import React from \"react\";\r\nimport { Paper, Button, Container } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles\";\r\nconst ImgHolder = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    \r\n      <Paper variant=\"outlined\" className={classes.galleryImgCard} square>\r\n        <img src={props.imgurl} className={classes.galleryImgDisplay} alt=\"img\" />\r\n        <div className={classes.imgTextDiv}>\r\n\r\n          <h3 className={classes.imgText}>{props.imgname}</h3>\r\n        </div>\r\n      </Paper>\r\n    \r\n  );\r\n};\r\n\r\nexport default ImgHolder;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\AdminButton.js",["108"],"import React from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { Paper, Button, Fade} from \"@material-ui/core\";\r\nimport AuthForm from \"../AuthForm\";\r\nimport useStyles from \"./Styles\";\r\n\r\nconst AdminButton = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = (e) => {\r\n    \r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    \r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <Fade in={open}>\r\n      <Paper className={classes.adminModal}>\r\n        <AuthForm onSub={handleClose} />\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        Admin Login\r\n      </button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminButton;\r\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":16},{"ruleId":"113","severity":1,"message":"117","line":2,"column":18,"nodeType":"115","messageId":"116","endLine":2,"endColumn":28},{"ruleId":"113","severity":1,"message":"118","line":1,"column":39,"nodeType":"115","messageId":"116","endLine":1,"endColumn":48},{"ruleId":"119","severity":1,"message":"120","line":32,"column":6,"nodeType":"121","endLine":32,"endColumn":20,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"120","line":38,"column":6,"nodeType":"121","endLine":38,"endColumn":20,"suggestions":"123"},{"ruleId":"113","severity":1,"message":"124","line":2,"column":17,"nodeType":"115","messageId":"116","endLine":2,"endColumn":25},{"ruleId":"113","severity":1,"message":"125","line":7,"column":10,"nodeType":"115","messageId":"116","endLine":7,"endColumn":15},{"ruleId":"109","replacedBy":"126"},{"ruleId":"111","replacedBy":"127"},{"ruleId":"119","severity":1,"message":"128","line":124,"column":6,"nodeType":"121","endLine":124,"endColumn":8,"suggestions":"129"},{"ruleId":"113","severity":1,"message":"130","line":2,"column":17,"nodeType":"115","messageId":"116","endLine":2,"endColumn":23},{"ruleId":"113","severity":1,"message":"131","line":2,"column":25,"nodeType":"115","messageId":"116","endLine":2,"endColumn":34},{"ruleId":"113","severity":1,"message":"130","line":3,"column":17,"nodeType":"115","messageId":"116","endLine":3,"endColumn":23},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'AuthForm' is defined but never used.","Identifier","unusedVar","'lightGreen' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkError' and 'initialErrorFields'. Either include them or remove the dependency array.","ArrayExpression",["134"],["135"],"'useState' is defined but never used.","'state' is assigned a value but never used.",["132"],["133"],"React Hook useEffect has a missing dependency: 'currentImgs'. Either include it or remove the dependency array.",["136"],"'Button' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"137","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [checkError, initialErrorFields, props.helper]",{"range":"142","text":"143"},{"range":"144","text":"143"},"Update the dependencies array to be: [currentImgs]",{"range":"145","text":"146"},[934,948],"[checkError, initialErrorFields, props.helper]",[1091,1105],[2669,2671],"[currentImgs]"]