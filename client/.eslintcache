[{"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\index.js":"1","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\App.js":"2","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js":"3","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js":"4","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js":"5","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js":"6","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js":"7","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js":"8","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js":"9","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js":"10","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js":"11","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\signOut.js":"12"},{"size":434,"mtime":1612817822346,"results":"13","hashOfConfig":"14"},{"size":1941,"mtime":1614547223519,"results":"15","hashOfConfig":"14"},{"size":1531,"mtime":1614619488239,"results":"16","hashOfConfig":"14"},{"size":2549,"mtime":1614546107915,"results":"17","hashOfConfig":"14"},{"size":1364,"mtime":1614033871492,"results":"18","hashOfConfig":"14"},{"size":1901,"mtime":1614029394021,"results":"19","hashOfConfig":"14"},{"size":512,"mtime":1614036391314,"results":"20","hashOfConfig":"14"},{"size":3754,"mtime":1614623092061,"results":"21","hashOfConfig":"14"},{"size":969,"mtime":1614622824853,"results":"22","hashOfConfig":"14"},{"size":729,"mtime":1614026652286,"results":"23","hashOfConfig":"14"},{"size":514,"mtime":1614027253804,"results":"24","hashOfConfig":"14"},{"size":516,"mtime":1614621278054,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"8inv6o",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\index.js",[],["57","58"],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\App.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js",["59","60"],"import { createMuiTheme } from '@material-ui/core';\r\nimport { orange, lightGreen } from '@material-ui/core/colors';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: orange[500]\r\n\r\n        },\r\n        secondary: {\r\n            main: lightGreen['A400']\r\n        },\r\n        type: \"dark\",\r\n\r\n    }\r\n});\r\n\r\ntheme.props = {\r\n    MuiButton: {\r\n        disableElevation: false\r\n    },\r\n    MuiTooltip: {\r\n        arrow: true\r\n    },\r\n    MuiInput: {\r\n   disableUnderline: true,\r\n    },\r\n\r\n\r\n\r\n};\r\n\r\ntheme.overrides = {\r\n    MuiButton: {\r\n        root: {\r\n            backgroundColor: orange[500],\r\n            '&:hover': {\r\n                backgroundColor: orange[300],\r\n            },\r\n\r\n        },\r\n        containedPrimary: {\r\n            backgroundColor: orange[300],\r\n            '&:hover': {\r\n                backgroundColor: orange[500],\r\n            },\r\n\r\n        },\r\n        containedSecondary: {\r\n            backgroundColor: lightGreen['A400'],\r\n            '&:hover': {\r\n                backgroundColor: lightGreen['A200'],\r\n            }\r\n        }\r\n    },\r\n    MuiTooltip: {\r\n        tooltip: {\r\n           \r\n            border: '2px solid ${theme.palette.primary.main}',\r\n            color: theme.palette.primary.main\r\n        },\r\n        arrow: {\r\n            color: theme.palette.primary.main\r\n        }\r\n    },\r\n    MuiInput:{\r\n        root:{\r\n            top: theme.spacing(2),\r\n            border: '1px solid ${grey[500]}',\r\n        }\r\n    },\r\n\r\n\r\n}\r\n\r\nexport default theme;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js",["61","62"],"import React, {useState, useEffect, useContext} from 'react'\r\nimport API from '../utils/API'\r\nimport SignIn from './SignIn'\r\nimport SignUp from './SignUp'\r\nimport SignOut from './signOut'\r\n\r\nimport { IsAuthContext } from \"./isAuthContext\";\r\n\r\nconst AuthForm = () => {\r\n   \r\n    const initialFormState = {\r\n        name: \"\", \r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n    // Set up our useState hook\r\n    const [formState, setFormState] = useState(initialFormState);\r\n     \r\n    // Bring in our global context items for checking authorization status\r\n    const {state, checkAuth} = useContext(IsAuthContext);\r\n    \r\n    // On change event handler\r\n    const handleInputChange = ({target: {name, value}}) => {\r\n        setFormState({...formState, [name]: value})\r\n    }\r\n    \r\n    //  Sign In button handler\r\n    const  submitSignIn = (e) => {\r\n        e.preventDefault();\r\n        const {email, password} = formState\r\n        \r\n        console.log({email: email, password: password})\r\n        \r\n        API.signIn({email: email, password: password}).then(({ data }) => {\r\n            console.log(\"data: \", data);\r\n\r\n            checkAuth()\r\n        })\r\n    }\r\n    //  Sign Up button handler\r\n\r\n    const submitSignUp = (e) => {\r\n        e.preventDefault();\r\n        const {name, email, password, password_confirmation} = formState\r\n        \r\n        console.log({email: email, password: password})\r\n        \r\n        API.signUp({name: name, email: email, password: password, password_confirmation: password_confirmation}).then((res) => {\r\n            console.log(res.data);\r\n            errorHandler(res.data)\r\n            checkAuth()\r\n        })\r\n    }\r\n    \r\n    // Function for switching between forms\r\n    const [formType, setFormType] = useState(\"signUp\");\r\n\r\n    const switchForm = (e) => {\r\n        e.preventDefault();\r\n        setFormType(e.target.name)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(formState);\r\n        console.log(state);\r\n    }, [formState])\r\n\r\n    // Error handling \r\n    const [errors, setErrors] = useState([])\r\n    const errorHandler = (res) => {\r\n        const err = res.errors\r\n\r\n        err ? setErrors(...errors, err) : setErrors(...errors)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { formType === \"signIn\" && <SignIn handleInputChange={handleInputChange} submit={submitSignIn} switch={switchForm}/>}\r\n            { formType === \"signUp\" && <SignUp handleInputChange={handleInputChange} submit={submitSignUp} switch={switchForm}/>}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default AuthForm\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js",["63"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all users\r\n  signUp: (userData) => {\r\n    return axios.post(\"/api/signup\", userData).then((data) => {\r\n      console.log(data);\r\n      return data\r\n\r\n    });\r\n  },\r\n  signIn: (userData) => {\r\n    return axios.post(\"/api/signin\", userData).then((data) => {\r\n      console.log(data);\r\n      return data\r\n    });\r\n  },\r\n  signOut: () => {\r\n    return axios.get(\"/api/signout\");\r\n  },\r\n  checkAuth: () => {\r\n    return axios.get(\"/api/checkauth\");\r\n  }\r\n};\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js",["64"],"import React, { useContext, useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Button,\r\n  IconButton,\r\n  Toolbar,\r\n  Container,\r\n  Hidden,\r\n  Menu,\r\n  MenuItem,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport useStyles from \"./Styles\";\r\nimport { IsAuthContext } from \"../AuthForm/isAuthContext\";\r\nimport SignOut from \"../AuthForm/signOut\";\r\nimport Logo from \"./assets/img/logo.png\";\r\n\r\nconst Nav = () => {\r\n  const classes = useStyles();\r\n  const { state, checkAuth } = useContext(IsAuthContext);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const navLinks = [\r\n    { title: `About`, path: `/about` },\r\n    { title: `Participate`, path: `/participate` },\r\n    { title: `Events`, path: `/events` },\r\n    { title: `Gallery`, path: `/gallery` },\r\n    { title: `Contact`, path: `/contact` },\r\n  ];\r\n  return (\r\n    <AppBar container position=\"sticky\" className={classes.nav}>\r\n      <Toolbar>\r\n        <Container maxWidth=\"xl\" className={classes.navDisplayFlex}>\r\n          <IconButton edge=\"start\" aria-label=\"home\">\r\n            <img\r\n              className={classes.logo}\r\n              src={Logo}\r\n              alt=\"Atlanta Animal Activists\"\r\n            />\r\n          </IconButton>\r\n          {/* ----------------Regular menu ----------------------------- */}\r\n\r\n          <Hidden xsDown>\r\n            <List\r\n              component=\"nav\"\r\n              aria-labelledby=\"main navigation\"\r\n              className={classes.linkDisplay}\r\n            >\r\n              {navLinks.map(({ title, path }) => (\r\n                <a\r\n                  href={path}\r\n                  key={title}\r\n                  className={classes.linkText}\r\n                  style={{}}\r\n                >\r\n                  <ListItem button>\r\n                    <ListItemText primary={title} />\r\n                  </ListItem>\r\n                </a>\r\n              ))}\r\n              <Button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                style={{ marginRight: \"10px\" }}\r\n                variant=\"contained\"\r\n              >\r\n                Donate\r\n              </Button>\r\n              {state.isAuth === true && <SignOut />}\r\n            </List>\r\n          </Hidden>\r\n\r\n          {/* ----------------Hamburger menu ----------------------------- */}\r\n          <Hidden smUp>\r\n            <IconButton\r\n              aria-controls=\"fade-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClick}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            <Menu\r\n              id=\"fade-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n              TransitionComponent={Fade}\r\n            >\r\n              {navLinks.map(({ title, path }) => (\r\n                // <a href={path} key={title} className={classes.linkText}>\r\n                <MenuItem href={path} onClick={handleClose} className={classes.menuSelections}>\r\n                  {title}\r\n                </MenuItem>\r\n                // </a>\r\n              ))}\r\n              <MenuItem onClick={handleClose}>\r\n                <Button color=\"primary\" type=\"submit\" fullWidth variant=\"contained\">\r\n                  Donate\r\n                </Button>\r\n              </MenuItem>\r\n              {state.isAuth === true && <MenuItem onClick={handleClose}><SignOut /></MenuItem>}\r\n            </Menu>\r\n          </Hidden>\r\n        </Container>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Nav;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js",["65","66"],"import { fade } from \"@material-ui/core\";\r\nimport React, { useState, createContext, useEffect, useReducer } from \"react\";\r\nimport API from '../utils/API'\r\nimport isAuthReducer from '../reducers/isAuthReducer'\r\n\r\nconst AuthState = ({ children }) => {\r\n \r\nconst [state, dispatch] = useReducer(isAuthReducer, {isAuth: undefined})\r\n\r\nconst checkAuth = () => {\r\n  API.checkAuth().then((data) => {\r\n    console.log(\"checkAuth func: \", data.data);\r\n    dispatch({type: data.data})\r\n  })\r\n}\r\nuseEffect(() => {\r\n checkAuth()\r\n}, [])\r\n\r\n  return (\r\n    <IsAuthContext.Provider value={{state, checkAuth}}>\r\n      {children}\r\n    </IsAuthContext.Provider>\r\n  );\r\n};\r\nexport const IsAuthContext = createContext();\r\nexport default AuthState;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js",["67","68"],"import React, { useReducer } from \"react\";\r\n\r\nconst isAuthReducer = (state, action) => {\r\n  console.log(\"action: \", action.type);\r\n  switch (action.type) {\r\n    case false:\r\n      console.log(\"switch case change: \", false);\r\n      return {isAuth: false}\r\n        // state.isAuth = false\r\n\r\n    case true:\r\n        console.log(\"switch case change: \", true);\r\n      return {isAuth: true}\r\n\r\n        // state.isAuth = true\r\n\r\n    default:\r\n      return state.isAuth \r\n     \r\n  }\r\n};\r\n\r\nexport default isAuthReducer;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\signOut.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":60,"column":21,"nodeType":"75","messageId":"76","endLine":60,"endColumn":62},{"ruleId":"73","severity":1,"message":"74","line":70,"column":21,"nodeType":"75","messageId":"76","endLine":70,"endColumn":45},{"ruleId":"77","severity":1,"message":"78","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":15},{"ruleId":"81","severity":1,"message":"82","line":66,"column":8,"nodeType":"83","endLine":66,"endColumn":19,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":3,"column":1,"nodeType":"87","endLine":24,"endColumn":3},{"ruleId":"77","severity":1,"message":"88","line":24,"column":18,"nodeType":"79","messageId":"80","endLine":24,"endColumn":27},{"ruleId":"77","severity":1,"message":"89","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":14},{"ruleId":"77","severity":1,"message":"90","line":2,"column":17,"nodeType":"79","messageId":"80","endLine":2,"endColumn":25},{"ruleId":"77","severity":1,"message":"91","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"92","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":27},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-unused-vars","'SignOut' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["95"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'checkAuth' is assigned a value but never used.","'fade' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","'useReducer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [formState, state]",{"range":"98","text":"99"},[1971,1982],"[formState, state]"]