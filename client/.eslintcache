[{"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\index.js":"1","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\App.js":"2","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js":"3","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js":"4","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js":"5","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js":"6","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js":"7","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js":"8","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js":"9","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js":"10","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\index.js":"11","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\keys.js":"12","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js":"13","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js":"14","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js":"15","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js":"16","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js":"17","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\ImgHolder.js":"18","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\signOut.js":"19","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\About.js":"20","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Participate.js":"21","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Events.js":"22"},{"size":396,"mtime":1616786389951,"results":"23","hashOfConfig":"24"},{"size":1708,"mtime":1617032695733,"results":"25","hashOfConfig":"24"},{"size":11601,"mtime":1616786389930,"results":"26","hashOfConfig":"24"},{"size":3663,"mtime":1616966292694,"results":"27","hashOfConfig":"24"},{"size":601,"mtime":1616789699126,"results":"28","hashOfConfig":"24"},{"size":8579,"mtime":1617037116499,"results":"29","hashOfConfig":"24"},{"size":1450,"mtime":1616793023148,"results":"30","hashOfConfig":"24"},{"size":661,"mtime":1616786389926,"results":"31","hashOfConfig":"24"},{"size":3717,"mtime":1616786389926,"results":"32","hashOfConfig":"24"},{"size":1465,"mtime":1616786389930,"results":"33","hashOfConfig":"24"},{"size":929,"mtime":1616786389929,"results":"34","hashOfConfig":"24"},{"size":188,"mtime":1616698210861,"results":"35","hashOfConfig":"24"},{"size":1129,"mtime":1616786389953,"results":"36","hashOfConfig":"24"},{"size":612,"mtime":1615499097522,"results":"37","hashOfConfig":"24"},{"size":449,"mtime":1616786389952,"results":"38","hashOfConfig":"24"},{"size":3212,"mtime":1616786389925,"results":"39","hashOfConfig":"24"},{"size":2243,"mtime":1616786389925,"results":"40","hashOfConfig":"24"},{"size":562,"mtime":1616786389929,"results":"41","hashOfConfig":"24"},{"size":612,"mtime":1616786389926,"results":"42","hashOfConfig":"24"},{"size":1405,"mtime":1616805848892,"results":"43","hashOfConfig":"24"},{"size":3195,"mtime":1617031738636,"results":"44","hashOfConfig":"24"},{"size":1766,"mtime":1617036946213,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ubnh4b",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\index.js",[],["99","100"],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\App.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js",[],["101","102"],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js",["103"],"\nimport React, { useState, createContext, useEffect, useReducer } from \"react\";\nimport API from '../utils/API'\nimport isAuthReducer from '../reducers/isAuthReducer'\n\nconst AuthState = ({ children }) => {\n \nconst [state, dispatch] = useReducer(isAuthReducer, {isAuth: undefined})\n\nconst checkAuth = () => {\n  API.checkAuth().then((data) => {\n    console.log(\"checkAuth func: \", data.data);\n    dispatch({type: data.data})\n  })\n}\nuseEffect(() => {\n checkAuth()\n}, [])\n\n  return (\n    <IsAuthContext.Provider value={{state, checkAuth}}>\n      {children}\n    </IsAuthContext.Provider>\n  );\n};\nexport const IsAuthContext = createContext();\nexport default AuthState;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js",["104"],"import React, { useState, useContext, useEffect } from \"react\";\nimport API from \"../utils/API\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\n\nimport { IsAuthContext } from \"./isAuthContext\";\n\nconst AuthForm = () => {\n\n  \n    // ------------------------------- Auth -------------------------------------------------\n  const initialFormState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n  // Set up our useState hook\n  const [formState, setFormState] = useState(initialFormState);\n\n  // Bring in our global context items for checking authorization status\n  const { checkAuth } = useContext(IsAuthContext);\n\n  // On change event handler\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  //  Sign In button handler\n  const submitSignIn = (e) => {\n    e.preventDefault();\n    const { email, password } = formState;\n    setHelperText(initialHelperState);\n    console.log({ email: email, password: password });\n\n    API.signIn({ email: email, password: password }).then(({ data }) => {\n        console.log(\"data: \", data);\n        errorHandler(data);\n        checkAuth();\n    });\n  };\n  //  Sign Up button handler\n\n  const submitSignUp = (e) => {\n    e.preventDefault();\n    const { name, email, password, password_confirmation } = formState;\n    setHelperText(initialHelperState);\n    console.log({ email: email, password: password });\n\n    API.signUp({\n      name: name,\n      email: email,\n      password: password,\n      password_confirmation: password_confirmation,\n    }).then((res) => {\n      console.log(res.data);\n      errorHandler(res.data);\n      checkAuth();\n      \n    });\n  };\n  // ----------------------- Form switch -----------------------------\n\n  const [formType, setFormType] = useState(\"signUp\");\n  \n  // Function for switching between forms\n  const switchForm = (e) => {\n    e.preventDefault();\n    setHelperText(initialHelperState)\n    setFormType(e.target.name);\n  };\n\n  // ----------------------- Error handling -----------------------------\n\n  const initialHelperState = {\n        error: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirm: \"\"\n  };\n  const [helperText, setHelperText] = useState(initialHelperState);\n\n  \n  const errorHandler =  (res) => {\n    const  error =  res.errors;\n    console.log(\"current errors: \", error);\n    console.log(\"current text: \", helperText);\n    // if we have errors we push them to our helperText state\n    if (error){\n        error.forEach(err => {\n            if (err.error) {setHelperText({...helperText, error: err.error})}\n            if (err.email) {setHelperText({...helperText,email: err.email})}\n            if (err.password) {setHelperText({...helperText, password: err.password})}\n            if (err.passwordConfirm) {setHelperText({...helperText, passwordConfirm: err.passwordConfirm})}\n             \n        });\n    } \n   \n  };\n \n  const { error, email, password, passwordConfirm } = helperText;\n  \n  return (\n    <div>\n      {formType === \"signIn\" && (\n        <SignIn\n          handleInputChange={handleInputChange}\n          submit={submitSignIn}\n          switch={switchForm}\n          helper={helperText}\n          errorHelper={error}\n          emailHelper={email}\n          passwordHelper={password}\n\n        />\n      )}\n      {formType === \"signUp\" && (\n        <SignUp\n          handleInputChange={handleInputChange}\n          submit={submitSignUp}\n          switch={switchForm}\n          helper={helperText}\n          errorHelper={error}\n          emailHelper={email}\n          passwordHelper={password}\n          passwordConfirmHelper={passwordConfirm}\n\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AuthForm;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\index.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\keys.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js",[],["105","106"],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js",["107"],"import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Grid, Link } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst SignUp = (props) => {\n  const initialErrorFields = {\n    error: false,\n    email: false,\n    name: false,\n    password: false,\n    passwordConfirm: false\n  };\n  const [errorFields, setErrorFields] = useState(initialErrorFields);\n\n  const checkError = () => {\n    if (props.errorHelper !== \"\") {\n      setErrorFields({\n        error: true,\n        email: true,\n        name: true,\n        password: true,\n        passwordConfirm: true,\n      });\n    }\n    if (props.emailHelper !== \"\") {\n      setErrorFields({ ...errorFields, email: true });\n    }\n    if (props.passwordHelper !== \"\") {\n      setErrorFields({ ...errorFields, password: true });\n    }\n    if (props.passwordConfirmHelper !== \"\") {\n      setErrorFields({ ...errorFields, password: true, passwordConfirm: true });\n    }\n  };\n  useEffect(() => {\n    setErrorFields(initialErrorFields);\n    checkError();\n  }, [props.helper]);\n  return (\n    <div>\n      <Typography variant=\"h5\">Sign Up</Typography>\n      <form noValidate>\n        <Grid>\n          {props.errorHelper !== \"\" && (\n            <Alert severity=\"error\">{props.errorHelper}</Alert>\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.name}\n            helperText={props.emailHelper}\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            autoFocus\n            onChange={props.handleInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.email}\n            helperText={props.emailHelper}\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onChange={props.handleInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.password}\n            helperText={props.passwordHelper}\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            onChange={props.handleInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.passwordConfirm}\n            helperText={props.passwordConfirmHelper}\n            name=\"password_confirmation\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            onChange={props.handleInputChange}\n          />\n        </Grid>\n\n        <Button\n          color=\"primary\"\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          onClick={props.submit}\n        >\n          Sign Up\n        </Button>\n        <Link variant=\"body2\" name=\"signIn\" onClick={props.switch}>\n          {\"Already have an account? Sign In\"}\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js",["108"],"import React, {useState, useEffect} from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Alert from '@material-ui/lab/Alert';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst SignIn = (props) => {\n  const initialErrorFields = {\n    error: false,\n    email: false,\n    password: false,\n};\n  const [errorFields, setErrorFields] = useState(initialErrorFields)\n\n  const checkError = () => {\n    \n    if(props.errorHelper !== \"\"){\n      setErrorFields({error: true, email: true, password: true})\n    }\n    if(props.emailHelper !== \"\"){\n      setErrorFields({...errorFields, email: true})\n    }\n    if(props.passwordHelper !== \"\"){\n      setErrorFields({...errorFields, password: true})\n    }\n     \n  }\n  useEffect(() => {\n    setErrorFields(initialErrorFields);\n    checkError()\n  }, [props.helper])\n  \n  return (\n    <div>\n      <Typography variant=\"h5\">Sign In</Typography>\n      <form noValidate>\n        {\n        props.errorHelper !== \"\" && \n        <Alert severity=\"error\">{props.errorHelper}</Alert>\n        }\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          error={errorFields.email}\n          helperText={props.emailHelper}\n          fullWidth\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n          onChange={props.handleInputChange}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          error={errorFields.password}\n          helperText={props.passwordHelper}\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          onChange={props.handleInputChange}\n        />\n\n        <Button\n          color=\"primary\"\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          onClick={props.submit}\n        >\n          Sign In\n        </Button>\n        <Link variant=\"body2\" name=\"signUp\" onClick={props.switch}>\n          {\"Don't have an account? Sign Up\"}\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\ImgHolder.js",["109"],"import React from \"react\";\nimport { Paper, Button, Container } from \"@material-ui/core\";\nimport useStyles from \"../Styles\";\nconst ImgHolder = (props) => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <Paper variant=\"outlined\" className={classes.galleryImgCard} square>\n        <img src={props.imgurl} className={classes.galleryImgDisplay} alt=\"img\" />\n        <div className={classes.imgTextDiv}>\n\n          <h3 className={classes.imgText}>{props.imgname}</h3>\n        </div>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default ImgHolder;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\signOut.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\About.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Participate.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Events.js",["110"],"import React from 'react';\r\nimport { Typography, Grid, Paper, Hidden, Button } from \"@material-ui/core\";\r\nimport useStyles from \"../components/Styles\";\r\nimport Person from './assets/img/person.jpg'\r\n\r\nconst Events = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Grid item xs={12} container className={classes.eventCont} >\r\n                \r\n                <Grid item xs={4} className={classes.eventLine}/> \r\n                <Grid item xs={4} /> \r\n            \r\n                <Grid item xs={4}  container>\r\n                    <Paper className={classes.eventPaper} >\r\n                        <Typography className={classes.eventTitle}>\r\n                            Events and Updates\r\n                        </Typography>\r\n                        <Hidden xsDown>\r\n                        <Typography item  className={classes.eventText}>\r\n                   We host many events and meet-ups throughout the year, they are regularly updated below but you can you also stay connected and up to date through our social media platforms. So if you want the lastes updates make sure to follow us on our Facebook or Twitter!\r\n      \r\n                    </Typography>\r\n                    \r\n                    </Hidden>\r\n                    \r\n\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item  xs={12} container className={classes.personCont}>\r\n                \r\n                <Grid item>\r\n                <img className={classes.person} src={Person} alt='person pets cow'/>\r\n                </Grid>\r\n                <Grid item className={classes.eventLine2}/>\r\n                </Grid>\r\n               \r\n                \r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Events\r\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":17,"nodeType":"119","messageId":"120","endLine":2,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":1,"column":39,"nodeType":"119","messageId":"120","endLine":1,"endColumn":48},{"ruleId":"111","replacedBy":"122"},{"ruleId":"113","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":38,"column":6,"nodeType":"126","endLine":38,"endColumn":20,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"125","line":32,"column":6,"nodeType":"126","endLine":32,"endColumn":20,"suggestions":"128"},{"ruleId":"117","severity":1,"message":"129","line":2,"column":17,"nodeType":"119","messageId":"120","endLine":2,"endColumn":23},{"ruleId":"117","severity":1,"message":"129","line":2,"column":43,"nodeType":"119","messageId":"120","endLine":2,"endColumn":49},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],["130"],["131"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["130"],["131"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkError' and 'initialErrorFields'. Either include them or remove the dependency array.","ArrayExpression",["132"],["133"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"134","fix":"136"},"Update the dependencies array to be: [checkError, initialErrorFields, props.helper]",{"range":"137","text":"138"},{"range":"139","text":"138"},[1054,1068],"[checkError, initialErrorFields, props.helper]",[903,917]]
[{"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\index.js":"1","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\App.js":"2","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js":"3","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js":"4","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js":"5","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js":"6","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js":"7","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\About.js":"8","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Participate.js":"9","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\AdminButton.js":"10","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js":"11","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js":"12","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\keys.js":"13","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js":"14","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js":"15","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\index.js":"16","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js":"17","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js":"18","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js":"19","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js":"20","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\ImgHolder.js":"21"},{"size":396,"mtime":1614627354488,"results":"22","hashOfConfig":"23"},{"size":1801,"mtime":1617032762209,"results":"24","hashOfConfig":"23"},{"size":12131,"mtime":1616705386149,"results":"25","hashOfConfig":"23"},{"size":7905,"mtime":1617031920569,"results":"26","hashOfConfig":"23"},{"size":1530,"mtime":1616861014910,"results":"27","hashOfConfig":"23"},{"size":3788,"mtime":1617031920631,"results":"28","hashOfConfig":"23"},{"size":622,"mtime":1616861014909,"results":"29","hashOfConfig":"23"},{"size":1405,"mtime":1616861014902,"results":"30","hashOfConfig":"23"},{"size":3201,"mtime":1617031920453,"results":"31","hashOfConfig":"23"},{"size":984,"mtime":1616707344746,"results":"32","hashOfConfig":"23"},{"size":688,"mtime":1614635844266,"results":"33","hashOfConfig":"23"},{"size":1519,"mtime":1616701809163,"results":"34","hashOfConfig":"23"},{"size":189,"mtime":1616698123783,"results":"35","hashOfConfig":"23"},{"size":1181,"mtime":1616533895926,"results":"36","hashOfConfig":"23"},{"size":3889,"mtime":1616707488320,"results":"37","hashOfConfig":"23"},{"size":1057,"mtime":1616712544388,"results":"38","hashOfConfig":"23"},{"size":643,"mtime":1614630418476,"results":"39","hashOfConfig":"23"},{"size":472,"mtime":1614630179916,"results":"40","hashOfConfig":"23"},{"size":2329,"mtime":1614646676051,"results":"41","hashOfConfig":"23"},{"size":3328,"mtime":1614712204528,"results":"42","hashOfConfig":"23"},{"size":558,"mtime":1616711519295,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8inv6o",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\index.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\App.js",["93","94"],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js",["95"],"import React, { useState, useEffect } from \"react\";\r\nimport UploadBox from \"./UploadBox\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles\";\r\nimport Keys from \"../../utils/keys\";\r\nimport { uploadFile } from \"react-s3\";\r\nimport API from \"../../utils/API\";\r\n\r\nconst ImageUploader = () => {\r\n  const classes = useStyles();\r\n\r\n  const accessKey = Keys.access;\r\n  const secretKey = Keys.secret;\r\n\r\n  const config = {\r\n    bucketName: \"atl-animal-activists-bucket\",\r\n    region: \"us-east-1\",\r\n    dirName: \"photos\",\r\n    accessKeyId: accessKey,\r\n    secretAccessKey: secretKey,\r\n  };\r\n\r\n  // set two different states for img URL and name to make state management more flexible\r\n  // (cant get name change to not erase current url and cant do duble destructuring to my knoledge, fastest fix for the moment)\r\n  let initialImgURLState = {\r\n    img1: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img2: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img3: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img4: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img5: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img6: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img7: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img8: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n    img9: {\r\n      url: \"\",\r\n      file: \"\",\r\n    },\r\n  };\r\n  let initialImgNameState = {\r\n    img1: {\r\n      name: \"\",\r\n    },\r\n    img2: {\r\n      name: \"\",\r\n    },\r\n    img3: {\r\n      name: \"\",\r\n    },\r\n    img4: {\r\n      name: \"\",\r\n    },\r\n    img5: {\r\n      name: \"\",\r\n    },\r\n    img6: {\r\n      name: \"\",\r\n    },\r\n    img7: {\r\n      name: \"\",\r\n    },\r\n    img8: {\r\n      name: \"\",\r\n    },\r\n    img9: {\r\n      name: \"\",\r\n    },\r\n  };\r\n  let initialCurrentImgState = [\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n    { url: \"\", name: \"\" },\r\n  ];\r\n\r\n  const [imgURLState, setImgURLState] = useState(initialImgURLState);\r\n  const [imgNameState, setImgNameState] = useState(initialImgNameState);\r\n  const [currentImgs, setCurrentImgs] = useState(initialCurrentImgState);\r\n\r\n  useEffect(() => {\r\n    // get all images and set to current\r\n    API.getAllImgs().then(({ data }) => {\r\n      if (data.length > 0) {\r\n        console.log(\"all imgs: \", data);\r\n        \r\n        let newArr = [...currentImgs]\r\n        data.forEach((img, i) => {\r\n          console.log(img,i);\r\n          newArr[i] = img\r\n        });\r\n        setCurrentImgs(newArr);\r\n      } else {\r\n        return;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(imgURLState, imgNameState, currentImgs);\r\n  // }, [imgURLState, imgNameState, currentImgs]);\r\n  // ---------------- handle Image change ---------------------\r\n  const handleImgChange = ({ target: { name, files } }) => {\r\n    console.log(files[0], name);\r\n    // here is where the two states get called upon\r\n    setImgURLState({\r\n      ...imgURLState,\r\n      [name]: {\r\n        url: URL.createObjectURL(files[0]),\r\n        file: files[0],\r\n      },\r\n    });\r\n    setImgNameState({\r\n      ...imgNameState,\r\n      [name]: {\r\n        name: files[0].name,\r\n      },\r\n    });\r\n  };\r\n  // ---------------- Handle Image Name change ---------------------\r\n\r\n  const handleNameChange = ({ target: { name, value } }) => {\r\n    // here is where I cannot figure out how to duble destructure the URL so it wont get replaced if it were to be a single state component\r\n    setImgNameState({\r\n      ...imgNameState,\r\n      [name]: {\r\n        name: value,\r\n      },\r\n    });\r\n  };\r\n  // ---------------- submit image ---------------------\r\n\r\n  const submitHandler = ({ target: { parentNode } }) => {\r\n    console.log(\"parent: \", parentNode.name);\r\n    const imgname = parentNode.name;\r\n\r\n    let { file } = imgURLState[imgname];\r\n    let { name } = imgNameState[imgname];\r\n\r\n    // upload to s-3 bucket\r\n    if (file && name) {\r\n      uploadFile(file, config)\r\n        .then((data) => {\r\n          //  save to db\r\n          API.uploadImg({\r\n            url: data.location,\r\n            name: name,\r\n            location: imgname,\r\n          }).then(() => {\r\n            console.log(\"Saved!\");\r\n          });\r\n        })\r\n        .catch((err) => console.error(err));\r\n    } else if (!file && name) {\r\n      // if no img added just change the name\r\n      API.uploadImg({\r\n        name: name,\r\n        location: imgname,\r\n      }).then(() => {\r\n        console.log(\"Saved!\");\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Grid item xs={12} className={classes.imgboxContainer} container>\r\n        \r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          \r\n          <div className={classes.paper}>\r\n          \r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img1.url ||\r\n                currentImgs[0].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img1.name || currentImgs[0].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img1\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file1\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img2.url ||\r\n                currentImgs[1].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img2.name || currentImgs[1].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img2\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file2\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img3.url ||\r\n                currentImgs[2].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img3.name || currentImgs[2].name}\r\n              handleNameChange={handleNameChange}\r\n              handleImgChange={handleImgChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img3\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file3\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* -------------------------- next set of uploaders ------------------------------------------ */}\r\n      <Grid item xs={12} className={classes.imgboxContainer} container>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            {}\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img4.url ||\r\n                currentImgs[3].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img4.name || currentImgs[3].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img4\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file4\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img5.url ||\r\n                currentImgs[4].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img5.name || currentImgs[4].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img5\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file5\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img6.url ||\r\n                currentImgs[5].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img6.name || currentImgs[5].name}\r\n              handleNameChange={handleNameChange}\r\n              handleImgChange={handleImgChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img6\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file6\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      {/* -------------------------- next set of uploaders ------------------------------------------ */}\r\n      <Grid item xs={12}  className={classes.imgboxContainer} container>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            {}\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img7.url ||\r\n                currentImgs[6].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img7.name || currentImgs[6].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img7\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file7\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img8.url ||\r\n                currentImgs[7].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img8.name || currentImgs[7].name}\r\n              handleImgChange={handleImgChange}\r\n              handleNameChange={handleNameChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img8\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file8\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={11} sm={4} lg={3}>\r\n          <div className={classes.paper}>\r\n            <UploadBox\r\n              imgURL={\r\n                imgURLState.img9.url ||\r\n                currentImgs[8].url ||\r\n                \"https://via.placeholder.com/300x200\"\r\n              }\r\n              imgName={imgNameState.img9.name || currentImgs[8].name}\r\n              handleNameChange={handleNameChange}\r\n              handleImgChange={handleImgChange}\r\n              submitHandler={submitHandler}\r\n              currentBox={\"img9\"}\r\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\r\n              currentId={\"icon-button-file9\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\About.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Participate.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\AdminButton.js",["96"],"import React from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { Paper, Button, Fade} from \"@material-ui/core\";\r\nimport AuthForm from \"../AuthForm\";\r\nimport useStyles from \"./Styles\";\r\n\r\nconst AdminButton = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = (e) => {\r\n    \r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    \r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <Fade in={open}>\r\n      <Paper className={classes.adminModal}>\r\n        <AuthForm onSub={handleClose} />\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        Admin Login\r\n      </button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminButton;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js",["97"],"\r\nimport React, { useState, createContext, useEffect, useReducer } from \"react\";\r\nimport API from '../utils/API'\r\nimport isAuthReducer from '../reducers/isAuthReducer'\r\n\r\nconst AuthState = ({ children }) => {\r\n \r\nconst [state, dispatch] = useReducer(isAuthReducer, {isAuth: undefined})\r\n\r\nconst checkAuth = () => {\r\n  API.checkAuth().then((data) => {\r\n    console.log(\"checkAuth func: \", data.data);\r\n    dispatch({type: data.data})\r\n  })\r\n}\r\nuseEffect(() => {\r\n checkAuth()\r\n}, [])\r\n\r\n  return (\r\n    <IsAuthContext.Provider value={{state, checkAuth}}>\r\n      {children}\r\n    </IsAuthContext.Provider>\r\n  );\r\n};\r\nexport const IsAuthContext = createContext();\r\nexport default AuthState;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\keys.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js",["98"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport SignIn from \"./SignIn\";\r\nimport SignUp from \"./SignUp\";\r\n\r\nimport { IsAuthContext } from \"./isAuthContext\";\r\n\r\nconst AuthForm = (props) => {\r\n\r\n  \r\n    // ------------------------------- Auth -------------------------------------------------\r\n  const initialFormState = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  // Set up our useState hook\r\n  const [formState, setFormState] = useState(initialFormState);\r\n\r\n  // Bring in our global context items for checking authorization status\r\n  const { checkAuth } = useContext(IsAuthContext);\r\n\r\n  // On change event handler\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    setFormState({ ...formState, [name]: value });\r\n  };\r\n\r\n  //  Sign In button handler\r\n  const submitSignIn = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formState;\r\n    setHelperText(initialHelperState);\r\n    console.log({ email: email, password: password });\r\n\r\n    API.signIn({ email: email, password: password }).then(({ data }) => {\r\n        console.log(\"data: \", data);\r\n        errorHandler(data);\r\n        checkAuth();\r\n    });\r\n  };\r\n  //  Sign Up button handler\r\n\r\n  const submitSignUp = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, password, password_confirmation } = formState;\r\n    setHelperText(initialHelperState);\r\n    console.log({ email: email, password: password });\r\n\r\n    API.signUp({\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      password_confirmation: password_confirmation,\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      errorHandler(res.data);\r\n      checkAuth();\r\n      \r\n    });\r\n  };\r\n  // ----------------------- Form switch -----------------------------\r\n\r\n  const [formType, setFormType] = useState(\"signIn\");\r\n  \r\n  // Function for switching between forms\r\n  const switchForm = (e) => {\r\n    e.preventDefault();\r\n    setHelperText(initialHelperState)\r\n    setFormType(e.target.name);\r\n  };\r\n\r\n  // ----------------------- Error handling -----------------------------\r\n\r\n  const initialHelperState = {\r\n        error: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\"\r\n  };\r\n  const [helperText, setHelperText] = useState(initialHelperState);\r\n\r\n  \r\n  const errorHandler =  (res) => {\r\n    const  error =  res.errors;\r\n    console.log(\"current errors: \", error);\r\n    console.log(\"current text: \", helperText);\r\n    // if we have errors we push them to our helperText state\r\n    if (error){\r\n        error.forEach(err => {\r\n            if (err.error) {setHelperText({...helperText, error: err.error})}\r\n            if (err.email) {setHelperText({...helperText,email: err.email})}\r\n            if (err.password) {setHelperText({...helperText, password: err.password})}\r\n            if (err.passwordConfirm) {setHelperText({...helperText, passwordConfirm: err.passwordConfirm})}\r\n             \r\n        });\r\n    } else {\r\n      props.onSub()\r\n    }\r\n   \r\n  };\r\n \r\n  const { error, email, password, passwordConfirm } = helperText;\r\n  \r\n  return (\r\n    <div>\r\n      {formType === \"signIn\" && (\r\n        <SignIn\r\n          handleInputChange={handleInputChange}\r\n          submit={submitSignIn}\r\n          switch={switchForm}\r\n          helper={helperText}\r\n          errorHelper={error}\r\n          emailHelper={email}\r\n          passwordHelper={password}\r\n\r\n        />\r\n      )}\r\n      {formType === \"signUp\" && (\r\n        <SignUp\r\n          handleInputChange={handleInputChange}\r\n          submit={submitSignUp}\r\n          switch={switchForm}\r\n          helper={helperText}\r\n          errorHelper={error}\r\n          emailHelper={email}\r\n          passwordHelper={password}\r\n          passwordConfirmHelper={passwordConfirm}\r\n\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\index.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js",["99"],"import React, {useState, useEffect} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst SignIn = (props) => {\r\n  const initialErrorFields = {\r\n    error: false,\r\n    email: false,\r\n    password: false,\r\n};\r\n  const [errorFields, setErrorFields] = useState(initialErrorFields)\r\n\r\n  const checkError = () => {\r\n    \r\n    if(props.errorHelper !== \"\"){\r\n      setErrorFields({error: true, email: true, password: true})\r\n    }\r\n    if(props.emailHelper !== \"\"){\r\n      setErrorFields({...errorFields, email: true})\r\n    }\r\n    if(props.passwordHelper !== \"\"){\r\n      setErrorFields({...errorFields, password: true})\r\n    }\r\n     \r\n  }\r\n  useEffect(() => {\r\n    setErrorFields(initialErrorFields);\r\n    checkError()\r\n  }, [props.helper])\r\n  \r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Sign In</Typography>\r\n      <form noValidate>\r\n        {\r\n        props.errorHelper !== \"\" && \r\n        <Alert severity=\"error\">{props.errorHelper}</Alert>\r\n        }\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          error={errorFields.email}\r\n          helperText={props.emailHelper}\r\n          fullWidth\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          onChange={props.handleInputChange}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          error={errorFields.password}\r\n          helperText={props.passwordHelper}\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          onChange={props.handleInputChange}\r\n        />\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          onClick={props.submit}\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <Link variant=\"body2\" name=\"signUp\" onClick={props.switch}>\r\n          {\"Don't have an account? Sign Up\"}\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js",["100"],"import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Grid, Link } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst SignUp = (props) => {\r\n  const initialErrorFields = {\r\n    error: false,\r\n    email: false,\r\n    name: false,\r\n    password: false,\r\n    passwordConfirm: false\r\n  };\r\n  const [errorFields, setErrorFields] = useState(initialErrorFields);\r\n\r\n  const checkError = () => {\r\n    if (props.errorHelper !== \"\") {\r\n      setErrorFields({\r\n        error: true,\r\n        email: true,\r\n        name: true,\r\n        password: true,\r\n        passwordConfirm: true,\r\n      });\r\n    }\r\n    if (props.emailHelper !== \"\") {\r\n      setErrorFields({ ...errorFields, email: true });\r\n    }\r\n    if (props.passwordHelper !== \"\") {\r\n      setErrorFields({ ...errorFields, password: true });\r\n    }\r\n    if (props.passwordConfirmHelper !== \"\") {\r\n      setErrorFields({ ...errorFields, password: true, passwordConfirm: true });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setErrorFields(initialErrorFields);\r\n    checkError();\r\n  }, [props.helper]);\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Sign Up</Typography>\r\n      <form noValidate>\r\n        <Grid>\r\n          {props.errorHelper !== \"\" && (\r\n            <Alert severity=\"error\">{props.errorHelper}</Alert>\r\n          )}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.name}\r\n            helperText={props.emailHelper}\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            autoFocus\r\n            onChange={props.handleInputChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.email}\r\n            helperText={props.emailHelper}\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={props.handleInputChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.password}\r\n            helperText={props.passwordHelper}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={props.handleInputChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.passwordConfirm}\r\n            helperText={props.passwordConfirmHelper}\r\n            name=\"password_confirmation\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            onChange={props.handleInputChange}\r\n          />\r\n        </Grid>\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          onClick={props.submit}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n        <Link variant=\"body2\" name=\"signIn\" onClick={props.switch}>\r\n          {\"Already have an account? Sign In\"}\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\ImgHolder.js",["101","102"],"import React from \"react\";\r\nimport { Paper, Button, Container } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles\";\r\nconst ImgHolder = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    \r\n      <Paper variant=\"outlined\" className={classes.galleryImgCard} square>\r\n        <img src={props.imgurl} className={classes.galleryImgDisplay} alt=\"img\" />\r\n        <div className={classes.imgTextDiv}>\r\n\r\n          <h3 className={classes.imgText}>{props.imgname}</h3>\r\n        </div>\r\n      </Paper>\r\n    \r\n  );\r\n};\r\n\r\nexport default ImgHolder;\r\n",{"ruleId":"103","severity":1,"message":"104","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":16},{"ruleId":"103","severity":1,"message":"107","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":124,"column":6,"nodeType":"110","endLine":124,"endColumn":8,"suggestions":"111"},{"ruleId":"103","severity":1,"message":"112","line":3,"column":17,"nodeType":"105","messageId":"106","endLine":3,"endColumn":23},{"ruleId":"103","severity":1,"message":"113","line":2,"column":17,"nodeType":"105","messageId":"106","endLine":2,"endColumn":25},{"ruleId":"103","severity":1,"message":"114","line":1,"column":39,"nodeType":"105","messageId":"106","endLine":1,"endColumn":48},{"ruleId":"108","severity":1,"message":"115","line":32,"column":6,"nodeType":"110","endLine":32,"endColumn":20,"suggestions":"116"},{"ruleId":"108","severity":1,"message":"115","line":38,"column":6,"nodeType":"110","endLine":38,"endColumn":20,"suggestions":"117"},{"ruleId":"103","severity":1,"message":"112","line":2,"column":17,"nodeType":"105","messageId":"106","endLine":2,"endColumn":23},{"ruleId":"103","severity":1,"message":"118","line":2,"column":25,"nodeType":"105","messageId":"106","endLine":2,"endColumn":34},"no-unused-vars","'AuthForm' is defined but never used.","Identifier","unusedVar","'ImageUploader' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentImgs'. Either include it or remove the dependency array.","ArrayExpression",["119"],"'Button' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'checkError' and 'initialErrorFields'. Either include them or remove the dependency array.",["120"],["121"],"'Container' is defined but never used.",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"124","fix":"126"},"Update the dependencies array to be: [currentImgs]",{"range":"127","text":"128"},"Update the dependencies array to be: [checkError, initialErrorFields, props.helper]",{"range":"129","text":"130"},{"range":"131","text":"130"},[2669,2671],"[currentImgs]",[934,948],"[checkError, initialErrorFields, props.helper]",[1091,1105]]
