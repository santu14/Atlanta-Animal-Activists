[{"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\index.js":"1","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\App.js":"2","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js":"3","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js":"4","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js":"5","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js":"6","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\AdminButton.js":"7","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js":"8","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\About.js":"9","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Events.js":"10","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Participate.js":"11","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js":"12","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js":"13","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\keys.js":"14","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js":"15","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js":"16","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js":"17","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\index.js":"18","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js":"19","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js":"20","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js":"21","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\ImgHolder.js":"22"},{"size":396,"mtime":1616786389951,"results":"23","hashOfConfig":"24"},{"size":1823,"mtime":1617649427597,"results":"25","hashOfConfig":"24"},{"size":11753,"mtime":1617037187397,"results":"26","hashOfConfig":"24"},{"size":3663,"mtime":1617050997636,"results":"27","hashOfConfig":"24"},{"size":1450,"mtime":1616793023148,"results":"28","hashOfConfig":"24"},{"size":11803,"mtime":1618005210398,"results":"29","hashOfConfig":"24"},{"size":939,"mtime":1617037187394,"results":"30","hashOfConfig":"24"},{"size":601,"mtime":1616789699126,"results":"31","hashOfConfig":"24"},{"size":1415,"mtime":1617128437780,"results":"32","hashOfConfig":"24"},{"size":2397,"mtime":1618004323514,"results":"33","hashOfConfig":"24"},{"size":3217,"mtime":1617133045383,"results":"34","hashOfConfig":"24"},{"size":661,"mtime":1616786389926,"results":"35","hashOfConfig":"24"},{"size":1465,"mtime":1616786389930,"results":"36","hashOfConfig":"24"},{"size":188,"mtime":1616698210861,"results":"37","hashOfConfig":"24"},{"size":1584,"mtime":1617390919965,"results":"38","hashOfConfig":"24"},{"size":3754,"mtime":1617037187394,"results":"39","hashOfConfig":"24"},{"size":612,"mtime":1617037925239,"results":"40","hashOfConfig":"24"},{"size":2303,"mtime":1618005676249,"results":"41","hashOfConfig":"24"},{"size":449,"mtime":1616786389952,"results":"42","hashOfConfig":"24"},{"size":3212,"mtime":1616786389925,"results":"43","hashOfConfig":"24"},{"size":2243,"mtime":1616786389925,"results":"44","hashOfConfig":"24"},{"size":541,"mtime":1618001539092,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ubnh4b",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\index.js",[],["99","100"],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\App.js",["101","102"],"import \"./App.css\";\nimport React from \"react\";\nimport Nav from \"./components/Header\";\nimport { ThemeProvider, Grid, Paper } from \"@material-ui/core\";\nimport theme from \"./components/Theme\";\nimport useStyles from \"./components/Styles\";\nimport AuthForm from \"./AuthForm\";\nimport AuthState from \"./AuthForm/isAuthContext\";\nimport Jumbotron from './components/Jumbotron'\nimport ImageUploader from \"./components/ImageUploader/index.js\";\nimport Gallery from \"./components/Gallery\";\nimport AdminButton from \"./components/AdminButton\";\nimport About from './components/About';\nimport Events from './components/Events';\n\nimport Participate from \"./components/Participate\";\n\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <AuthState>\n          <Grid container direction=\"column\" spacing={3} xs={12}>\n            {/* nav container */}\n            <Nav className={classes.nav}/>\n            \n            {/* tagline container */}\n   \n              <Jumbotron/>\n\n              <About/>\n              <Participate/>\n\n              <Events/>\n              <Gallery/>\n              \n     \n          \n         \n      \n            \n              {/* <ImageUploader/>  */}\n              \n            \n            {/* auth form container */}\n            <Grid item xs={12} container>\n              <Grid item xs={0} sm={2} md={3} lr={4} />\n              <Grid item xs={12} sm={8} md={6} lr={4}>\n                <Paper className={classes.paper}>\n                  \n                  {/* <AuthForm /> */}\n                  <AdminButton/>\n                </Paper>\n              </Grid>\n              <Grid item xs={0} sm={2} md={3} lr={4} />\n            </Grid>\n          </Grid>\n        </AuthState>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js",["103"],"import React, { useState, useEffect } from \"react\";\nimport UploadBox from \"./UploadBox\";\nimport { Grid } from \"@material-ui/core\";\nimport useStyles from \"../Styles\";\nimport Keys from \"../../utils/keys\";\nimport { uploadFile } from \"react-s3\";\nimport API from \"../../utils/API\";\n\nconst ImageUploader = () => {\n  const classes = useStyles();\n\n  const accessKey = Keys.access;\n  const secretKey = Keys.secret;\n\n  const config = {\n    bucketName: \"atl-animal-activists-bucket\",\n    region: \"us-east-1\",\n    dirName: \"photos\",\n    accessKeyId: accessKey,\n    secretAccessKey: secretKey,\n  };\n\n  // set two different states for img URL and name to make state management more flexible\n  // (cant get name change to not erase current url and cant do duble destructuring to my knoledge, fastest fix for the moment)\n  let initialImgURLState = {\n    img1: {\n      url: \"\",\n      file: \"\",\n    },\n    img2: {\n      url: \"\",\n      file: \"\",\n    },\n    img3: {\n      url: \"\",\n      file: \"\",\n    },\n    img4: {\n      url: \"\",\n      file: \"\",\n    },\n    img5: {\n      url: \"\",\n      file: \"\",\n    },\n    img6: {\n      url: \"\",\n      file: \"\",\n    },\n    img7: {\n      url: \"\",\n      file: \"\",\n    },\n    img8: {\n      url: \"\",\n      file: \"\",\n    },\n    img9: {\n      url: \"\",\n      file: \"\",\n    },\n  };\n  let initialImgNameState = {\n    img1: {\n      name: \"\",\n    },\n    img2: {\n      name: \"\",\n    },\n    img3: {\n      name: \"\",\n    },\n    img4: {\n      name: \"\",\n    },\n    img5: {\n      name: \"\",\n    },\n    img6: {\n      name: \"\",\n    },\n    img7: {\n      name: \"\",\n    },\n    img8: {\n      name: \"\",\n    },\n    img9: {\n      name: \"\",\n    },\n  };\n  let initialCurrentImgState = [\n    { url: \"\", name: \"\" },\n    { url: \"\", name: \"\" },\n    { url: \"\", name: \"\" },\n    { url: \"\", name: \"\" },\n    { url: \"\", name: \"\" },\n    { url: \"\", name: \"\" },\n    { url: \"\", name: \"\" },\n    { url: \"\", name: \"\" },\n    { url: \"\", name: \"\" },\n  ];\n\n  const [imgURLState, setImgURLState] = useState(initialImgURLState);\n  const [imgNameState, setImgNameState] = useState(initialImgNameState);\n  const [currentImgs, setCurrentImgs] = useState(initialCurrentImgState);\n\n  useEffect(() => {\n    // get all images and set to current\n    API.getAllImgs().then(({ data }) => {\n      if (data.length > 0) {\n        console.log(\"all imgs: \", data);\n        \n        let newArr = [...currentImgs]\n        data.forEach((img, i) => {\n          console.log(img,i);\n          newArr[i] = img\n        });\n        setCurrentImgs(newArr);\n      } else {\n        return;\n      }\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(imgURLState, imgNameState, currentImgs);\n  // }, [imgURLState, imgNameState, currentImgs]);\n  // ---------------- handle Image change ---------------------\n  const handleImgChange = ({ target: { name, files } }) => {\n    console.log(files[0], name);\n    // here is where the two states get called upon\n    setImgURLState({\n      ...imgURLState,\n      [name]: {\n        url: URL.createObjectURL(files[0]),\n        file: files[0],\n      },\n    });\n    setImgNameState({\n      ...imgNameState,\n      [name]: {\n        name: files[0].name,\n      },\n    });\n  };\n  // ---------------- Handle Image Name change ---------------------\n\n  const handleNameChange = ({ target: { name, value } }) => {\n    // here is where I cannot figure out how to duble destructure the URL so it wont get replaced if it were to be a single state component\n    setImgNameState({\n      ...imgNameState,\n      [name]: {\n        name: value,\n      },\n    });\n  };\n  // ---------------- submit image ---------------------\n\n  const submitHandler = ({ target: { parentNode } }) => {\n    console.log(\"parent: \", parentNode.name);\n    const imgname = parentNode.name;\n\n    let { file } = imgURLState[imgname];\n    let { name } = imgNameState[imgname];\n\n    // upload to s-3 bucket\n    if (file && name) {\n      uploadFile(file, config)\n        .then((data) => {\n          //  save to db\n          API.uploadImg({\n            url: data.location,\n            name: name,\n            location: imgname,\n          }).then(() => {\n            console.log(\"Saved!\");\n          });\n        })\n        .catch((err) => console.error(err));\n    } else if (!file && name) {\n      // if no img added just change the name\n      API.uploadImg({\n        name: name,\n        location: imgname,\n      }).then(() => {\n        console.log(\"Saved!\");\n      });\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div>\n      \n      <Grid item xs={12} className={classes.imgboxContainer} container>\n        \n        <Grid item xs={11} sm={4} lg={3}>\n          \n          <div className={classes.paper}>\n          \n            <UploadBox\n              imgURL={\n                imgURLState.img1.url ||\n                currentImgs[0].url ||\n                \"https://via.placeholder.com/300x200\"\n              }\n              imgName={imgNameState.img1.name || currentImgs[0].name}\n              handleImgChange={handleImgChange}\n              handleNameChange={handleNameChange}\n              submitHandler={submitHandler}\n              currentBox={\"img1\"}\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\n              currentId={\"icon-button-file1\"}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={11} sm={4} lg={3}>\n          <div className={classes.paper}>\n            <UploadBox\n              imgURL={\n                imgURLState.img2.url ||\n                currentImgs[1].url ||\n                \"https://via.placeholder.com/300x200\"\n              }\n              imgName={imgNameState.img2.name || currentImgs[1].name}\n              handleImgChange={handleImgChange}\n              handleNameChange={handleNameChange}\n              submitHandler={submitHandler}\n              currentBox={\"img2\"}\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\n              currentId={\"icon-button-file2\"}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={11} sm={4} lg={3}>\n          <div className={classes.paper}>\n            <UploadBox\n              imgURL={\n                imgURLState.img3.url ||\n                currentImgs[2].url ||\n                \"https://via.placeholder.com/300x200\"\n              }\n              imgName={imgNameState.img3.name || currentImgs[2].name}\n              handleNameChange={handleNameChange}\n              handleImgChange={handleImgChange}\n              submitHandler={submitHandler}\n              currentBox={\"img3\"}\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\n              currentId={\"icon-button-file3\"}\n            />\n          </div>\n        </Grid>\n      </Grid>\n\n      {/* -------------------------- next set of uploaders ------------------------------------------ */}\n      <Grid item xs={12} className={classes.imgboxContainer} container>\n        <Grid item xs={11} sm={4} lg={3}>\n          <div className={classes.paper}>\n            {}\n            <UploadBox\n              imgURL={\n                imgURLState.img4.url ||\n                currentImgs[3].url ||\n                \"https://via.placeholder.com/300x200\"\n              }\n              imgName={imgNameState.img4.name || currentImgs[3].name}\n              handleImgChange={handleImgChange}\n              handleNameChange={handleNameChange}\n              submitHandler={submitHandler}\n              currentBox={\"img4\"}\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\n              currentId={\"icon-button-file4\"}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={11} sm={4} lg={3}>\n          <div className={classes.paper}>\n            <UploadBox\n              imgURL={\n                imgURLState.img5.url ||\n                currentImgs[4].url ||\n                \"https://via.placeholder.com/300x200\"\n              }\n              imgName={imgNameState.img5.name || currentImgs[4].name}\n              handleImgChange={handleImgChange}\n              handleNameChange={handleNameChange}\n              submitHandler={submitHandler}\n              currentBox={\"img5\"}\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\n              currentId={\"icon-button-file5\"}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={11} sm={4} lg={3}>\n          <div className={classes.paper}>\n            <UploadBox\n              imgURL={\n                imgURLState.img6.url ||\n                currentImgs[5].url ||\n                \"https://via.placeholder.com/300x200\"\n              }\n              imgName={imgNameState.img6.name || currentImgs[5].name}\n              handleNameChange={handleNameChange}\n              handleImgChange={handleImgChange}\n              submitHandler={submitHandler}\n              currentBox={\"img6\"}\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\n              currentId={\"icon-button-file6\"}\n            />\n          </div>\n        </Grid>\n      </Grid>\n      \n      {/* -------------------------- next set of uploaders ------------------------------------------ */}\n      <Grid item xs={12}  className={classes.imgboxContainer} container>\n        <Grid item xs={11} sm={4} lg={3}>\n          <div className={classes.paper}>\n            {}\n            <UploadBox\n              imgURL={\n                imgURLState.img7.url ||\n                currentImgs[6].url ||\n                \"https://via.placeholder.com/300x200\"\n              }\n              imgName={imgNameState.img7.name || currentImgs[6].name}\n              handleImgChange={handleImgChange}\n              handleNameChange={handleNameChange}\n              submitHandler={submitHandler}\n              currentBox={\"img7\"}\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\n              currentId={\"icon-button-file7\"}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={11} sm={4} lg={3}>\n          <div className={classes.paper}>\n            <UploadBox\n              imgURL={\n                imgURLState.img8.url ||\n                currentImgs[7].url ||\n                \"https://via.placeholder.com/300x200\"\n              }\n              imgName={imgNameState.img8.name || currentImgs[7].name}\n              handleImgChange={handleImgChange}\n              handleNameChange={handleNameChange}\n              submitHandler={submitHandler}\n              currentBox={\"img8\"}\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\n              currentId={\"icon-button-file8\"}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={11} sm={4} lg={3}>\n          <div className={classes.paper}>\n            <UploadBox\n              imgURL={\n                imgURLState.img9.url ||\n                currentImgs[8].url ||\n                \"https://via.placeholder.com/300x200\"\n              }\n              imgName={imgNameState.img9.name || currentImgs[8].name}\n              handleNameChange={handleNameChange}\n              handleImgChange={handleImgChange}\n              submitHandler={submitHandler}\n              currentBox={\"img9\"}\n              // had to make the upload button ID a prop that changes as it kept rejectiong other props due to it being an ID\n              currentId={\"icon-button-file9\"}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ImageUploader;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\AdminButton.js",["104"],"import React from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Paper, Button, Fade} from \"@material-ui/core\";\nimport AuthForm from \"../AuthForm\";\nimport useStyles from \"./Styles\";\n\nconst AdminButton = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = (e) => {\n    \n    setOpen(true);\n  };\n\n  const handleClose = (e) => {\n    \n    setOpen(false);\n  };\n\n  const body = (\n    <Fade in={open}>\n      <Paper className={classes.adminModal}>\n        <AuthForm onSub={handleClose} />\n      </Paper>\n    </Fade>\n  );\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        Admin Login\n      </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nexport default AdminButton;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\About.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Events.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Participate.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js",["105"],"\nimport React, { useState, createContext, useEffect, useReducer } from \"react\";\nimport API from '../utils/API'\nimport isAuthReducer from '../reducers/isAuthReducer'\n\nconst AuthState = ({ children }) => {\n \nconst [state, dispatch] = useReducer(isAuthReducer, {isAuth: undefined})\n\nconst checkAuth = () => {\n  API.checkAuth().then((data) => {\n    console.log(\"checkAuth func: \", data.data);\n    dispatch({type: data.data})\n  })\n}\nuseEffect(() => {\n checkAuth()\n}, [])\n\n  return (\n    <IsAuthContext.Provider value={{state, checkAuth}}>\n      {children}\n    </IsAuthContext.Provider>\n  );\n};\nexport const IsAuthContext = createContext();\nexport default AuthState;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\keys.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js",["106"],"import React, { useState, useContext, useEffect } from \"react\";\nimport API from \"../utils/API\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\n\nimport { IsAuthContext } from \"./isAuthContext\";\n\nconst AuthForm = (props) => {\n\n  \n    // ------------------------------- Auth -------------------------------------------------\n  const initialFormState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n  // Set up our useState hook\n  const [formState, setFormState] = useState(initialFormState);\n\n  // Bring in our global context items for checking authorization status\n  const { checkAuth } = useContext(IsAuthContext);\n\n  // On change event handler\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  //  Sign In button handler\n  const submitSignIn = (e) => {\n    e.preventDefault();\n    const { email, password } = formState;\n    setHelperText(initialHelperState);\n    console.log({ email: email, password: password });\n\n    API.signIn({ email: email, password: password }).then(({ data }) => {\n        console.log(\"data: \", data);\n        errorHandler(data);\n        checkAuth();\n    });\n  };\n  //  Sign Up button handler\n\n  const submitSignUp = (e) => {\n    e.preventDefault();\n    const { name, email, password, password_confirmation } = formState;\n    setHelperText(initialHelperState);\n    console.log({ email: email, password: password });\n\n    API.signUp({\n      name: name,\n      email: email,\n      password: password,\n      password_confirmation: password_confirmation,\n    }).then((res) => {\n      console.log(res.data);\n      errorHandler(res.data);\n      checkAuth();\n      \n    });\n  };\n  // ----------------------- Form switch -----------------------------\n\n  const [formType, setFormType] = useState(\"signIn\");\n  \n  // Function for switching between forms\n  const switchForm = (e) => {\n    e.preventDefault();\n    setHelperText(initialHelperState)\n    setFormType(e.target.name);\n  };\n\n  // ----------------------- Error handling -----------------------------\n\n  const initialHelperState = {\n        error: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirm: \"\"\n  };\n  const [helperText, setHelperText] = useState(initialHelperState);\n\n  \n  const errorHandler =  (res) => {\n    const  error =  res.errors;\n    console.log(\"current errors: \", error);\n    console.log(\"current text: \", helperText);\n    // if we have errors we push them to our helperText state\n    if (error){\n        error.forEach(err => {\n            if (err.error) {setHelperText({...helperText, error: err.error})}\n            if (err.email) {setHelperText({...helperText,email: err.email})}\n            if (err.password) {setHelperText({...helperText, password: err.password})}\n            if (err.passwordConfirm) {setHelperText({...helperText, passwordConfirm: err.passwordConfirm})}\n             \n        });\n    } else {\n      props.onSub()\n    }\n   \n  };\n \n  const { error, email, password, passwordConfirm } = helperText;\n  \n  return (\n    <div>\n      {formType === \"signIn\" && (\n        <SignIn\n          handleInputChange={handleInputChange}\n          submit={submitSignIn}\n          switch={switchForm}\n          helper={helperText}\n          errorHelper={error}\n          emailHelper={email}\n          passwordHelper={password}\n\n        />\n      )}\n      {formType === \"signUp\" && (\n        <SignUp\n          handleInputChange={handleInputChange}\n          submit={submitSignUp}\n          switch={switchForm}\n          helper={helperText}\n          errorHelper={error}\n          emailHelper={email}\n          passwordHelper={password}\n          passwordConfirmHelper={passwordConfirm}\n\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AuthForm;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\index.js",["107"],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js",["108"],"import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Grid, Link } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst SignUp = (props) => {\n  const initialErrorFields = {\n    error: false,\n    email: false,\n    name: false,\n    password: false,\n    passwordConfirm: false\n  };\n  const [errorFields, setErrorFields] = useState(initialErrorFields);\n\n  const checkError = () => {\n    if (props.errorHelper !== \"\") {\n      setErrorFields({\n        error: true,\n        email: true,\n        name: true,\n        password: true,\n        passwordConfirm: true,\n      });\n    }\n    if (props.emailHelper !== \"\") {\n      setErrorFields({ ...errorFields, email: true });\n    }\n    if (props.passwordHelper !== \"\") {\n      setErrorFields({ ...errorFields, password: true });\n    }\n    if (props.passwordConfirmHelper !== \"\") {\n      setErrorFields({ ...errorFields, password: true, passwordConfirm: true });\n    }\n  };\n  useEffect(() => {\n    setErrorFields(initialErrorFields);\n    checkError();\n  }, [props.helper]);\n  return (\n    <div>\n      <Typography variant=\"h5\">Sign Up</Typography>\n      <form noValidate>\n        <Grid>\n          {props.errorHelper !== \"\" && (\n            <Alert severity=\"error\">{props.errorHelper}</Alert>\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.name}\n            helperText={props.emailHelper}\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            autoFocus\n            onChange={props.handleInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.email}\n            helperText={props.emailHelper}\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onChange={props.handleInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.password}\n            helperText={props.passwordHelper}\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            onChange={props.handleInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.passwordConfirm}\n            helperText={props.passwordConfirmHelper}\n            name=\"password_confirmation\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            onChange={props.handleInputChange}\n          />\n        </Grid>\n\n        <Button\n          color=\"primary\"\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          onClick={props.submit}\n        >\n          Sign Up\n        </Button>\n        <Link variant=\"body2\" name=\"signIn\" onClick={props.switch}>\n          {\"Already have an account? Sign In\"}\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js",["109"],"import React, {useState, useEffect} from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Alert from '@material-ui/lab/Alert';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst SignIn = (props) => {\n  const initialErrorFields = {\n    error: false,\n    email: false,\n    password: false,\n};\n  const [errorFields, setErrorFields] = useState(initialErrorFields)\n\n  const checkError = () => {\n    \n    if(props.errorHelper !== \"\"){\n      setErrorFields({error: true, email: true, password: true})\n    }\n    if(props.emailHelper !== \"\"){\n      setErrorFields({...errorFields, email: true})\n    }\n    if(props.passwordHelper !== \"\"){\n      setErrorFields({...errorFields, password: true})\n    }\n     \n  }\n  useEffect(() => {\n    setErrorFields(initialErrorFields);\n    checkError()\n  }, [props.helper])\n  \n  return (\n    <div>\n      <Typography variant=\"h5\">Sign In</Typography>\n      <form noValidate>\n        {\n        props.errorHelper !== \"\" && \n        <Alert severity=\"error\">{props.errorHelper}</Alert>\n        }\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          error={errorFields.email}\n          helperText={props.emailHelper}\n          fullWidth\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n          onChange={props.handleInputChange}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          error={errorFields.password}\n          helperText={props.passwordHelper}\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          onChange={props.handleInputChange}\n        />\n\n        <Button\n          color=\"primary\"\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          onClick={props.submit}\n        >\n          Sign In\n        </Button>\n        <Link variant=\"body2\" name=\"signUp\" onClick={props.switch}>\n          {\"Don't have an account? Sign Up\"}\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\ImgHolder.js",["110","111"],"import React from \"react\";\nimport { Paper, Button, Container } from \"@material-ui/core\";\nimport useStyles from \"../Styles\";\nconst ImgHolder = (props) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Paper variant=\"outlined\"  square>\n        <img\n          src={props.imgurl}\n          className={classes.galleryImgDisplay}\n          alt=\"img\"\n        />\n      <div className={classes.imgTextDiv}>\n        <h3 className={classes.imgText}>{props.imgname}</h3>\n      </div>\n      </Paper>\n    </>\n  );\n};\n\nexport default ImgHolder;\n",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":16},{"ruleId":"116","severity":1,"message":"120","line":10,"column":8,"nodeType":"118","messageId":"119","endLine":10,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":124,"column":6,"nodeType":"123","endLine":124,"endColumn":8,"suggestions":"124"},{"ruleId":"116","severity":1,"message":"125","line":3,"column":17,"nodeType":"118","messageId":"119","endLine":3,"endColumn":23},{"ruleId":"116","severity":1,"message":"126","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":25},{"ruleId":"116","severity":1,"message":"127","line":1,"column":39,"nodeType":"118","messageId":"119","endLine":1,"endColumn":48},{"ruleId":"116","severity":1,"message":"128","line":6,"column":35,"nodeType":"118","messageId":"119","endLine":6,"endColumn":41},{"ruleId":"121","severity":1,"message":"129","line":38,"column":6,"nodeType":"123","endLine":38,"endColumn":20,"suggestions":"130"},{"ruleId":"121","severity":1,"message":"129","line":32,"column":6,"nodeType":"123","endLine":32,"endColumn":20,"suggestions":"131"},{"ruleId":"116","severity":1,"message":"125","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":23},{"ruleId":"116","severity":1,"message":"132","line":2,"column":25,"nodeType":"118","messageId":"119","endLine":2,"endColumn":34},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'AuthForm' is defined but never used.","Identifier","unusedVar","'ImageUploader' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentImgs'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'Button' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Hidden' is defined but never used.","React Hook useEffect has missing dependencies: 'checkError' and 'initialErrorFields'. Either include them or remove the dependency array.",["136"],["137"],"'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},"Update the dependencies array to be: [currentImgs]",{"range":"143","text":"144"},"Update the dependencies array to be: [checkError, initialErrorFields, props.helper]",{"range":"145","text":"146"},{"range":"147","text":"146"},[2546,2548],"[currentImgs]",[1054,1068],"[checkError, initialErrorFields, props.helper]",[903,917]]