[{"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\index.js":"1","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\App.js":"2","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js":"3","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js":"4","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js":"5","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js":"6","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js":"7","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js":"8","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js":"9","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js":"10","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js":"11","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\signOut.js":"12","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js":"13","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js":"14","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js":"15","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js":"16"},{"size":396,"mtime":1614627354488,"results":"17","hashOfConfig":"18"},{"size":1732,"mtime":1616009478703,"results":"19","hashOfConfig":"18"},{"size":1516,"mtime":1614634863716,"results":"20","hashOfConfig":"18"},{"size":3896,"mtime":1615999821698,"results":"21","hashOfConfig":"18"},{"size":2329,"mtime":1614646676051,"results":"22","hashOfConfig":"18"},{"size":3328,"mtime":1614712204528,"results":"23","hashOfConfig":"18"},{"size":1015,"mtime":1616000805083,"results":"24","hashOfConfig":"18"},{"size":3759,"mtime":1614630217616,"results":"25","hashOfConfig":"18"},{"size":2438,"mtime":1616010773218,"results":"26","hashOfConfig":"18"},{"size":688,"mtime":1614635844266,"results":"27","hashOfConfig":"18"},{"size":472,"mtime":1614630179916,"results":"28","hashOfConfig":"18"},{"size":643,"mtime":1614630418476,"results":"29","hashOfConfig":"18"},{"size":542,"mtime":1614626373185,"results":"30","hashOfConfig":"18"},{"size":643,"mtime":1614630418476,"results":"31","hashOfConfig":"18"},{"size":3571,"mtime":1616016197559,"results":"32","hashOfConfig":"18"},{"size":1510,"mtime":1616015221938,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"8inv6o",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\index.js",[],["73","74"],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\App.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js",["75"],"import { createMuiTheme } from '@material-ui/core';\r\nimport { orange, lightGreen, grey } from '@material-ui/core/colors';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: orange[500]\r\n\r\n        },\r\n        secondary: {\r\n            main: '#38393A'\r\n        },\r\n        type: \"dark\",\r\n\r\n    }\r\n});\r\n\r\ntheme.props = {\r\n    MuiButton: {\r\n        disableElevation: false\r\n    },\r\n    MuiTooltip: {\r\n        arrow: true\r\n    },\r\n    MuiInput: {\r\n   disableUnderline: true,\r\n    },\r\n\r\n\r\n\r\n};\r\n\r\ntheme.overrides = {\r\n    MuiButton: {\r\n        root: {\r\n            backgroundColor: orange[500],\r\n            '&:hover': {\r\n                backgroundColor: orange[300],\r\n            },\r\n\r\n        },\r\n        containedPrimary: {\r\n            backgroundColor: orange[300],\r\n            '&:hover': {\r\n                backgroundColor: orange[500],\r\n            },\r\n\r\n        },\r\n        containedSecondary: {\r\n            backgroundColor: '#38393A',\r\n            '&:hover': {\r\n                backgroundColor: '#808081',\r\n            }\r\n        }\r\n    },\r\n    MuiTooltip: {\r\n        tooltip: {\r\n           \r\n            border: `2px solid ${theme.palette.primary.main}`,\r\n            color: theme.palette.primary.main\r\n        },\r\n        arrow: {\r\n            color: theme.palette.primary.main\r\n        }\r\n    },\r\n    MuiInput:{\r\n        root:{\r\n            top: theme.spacing(2),\r\n            border: `1px solid ${grey[500]}`,\r\n        }\r\n    },\r\n    \r\n\r\n\r\n}\r\n\r\nexport default theme;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js",["76"],"import React, {useState, useEffect} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst SignIn = (props) => {\r\n  const initialErrorFields = {\r\n    error: false,\r\n    email: false,\r\n    password: false,\r\n};\r\n  const [errorFields, setErrorFields] = useState(initialErrorFields)\r\n\r\n  const checkError = () => {\r\n    \r\n    if(props.errorHelper !== \"\"){\r\n      setErrorFields({error: true, email: true, password: true})\r\n    }\r\n    if(props.emailHelper !== \"\"){\r\n      setErrorFields({...errorFields, email: true})\r\n    }\r\n    if(props.passwordHelper !== \"\"){\r\n      setErrorFields({...errorFields, password: true})\r\n    }\r\n     \r\n  }\r\n  useEffect(() => {\r\n    setErrorFields(initialErrorFields);\r\n    checkError()\r\n  }, [props.helper])\r\n  \r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Sign In</Typography>\r\n      <form noValidate>\r\n        {\r\n        props.errorHelper !== \"\" && \r\n        <Alert severity=\"error\">{props.errorHelper}</Alert>\r\n        }\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          error={errorFields.email}\r\n          helperText={props.emailHelper}\r\n          fullWidth\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          onChange={props.handleInputChange}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          error={errorFields.password}\r\n          helperText={props.passwordHelper}\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          onChange={props.handleInputChange}\r\n        />\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          onClick={props.submit}\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <Link variant=\"body2\" name=\"signUp\" onClick={props.switch}>\r\n          {\"Don't have an account? Sign Up\"}\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js",["77"],"import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Grid, Link } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst SignUp = (props) => {\r\n  const initialErrorFields = {\r\n    error: false,\r\n    email: false,\r\n    name: false,\r\n    password: false,\r\n    passwordConfirm: false\r\n  };\r\n  const [errorFields, setErrorFields] = useState(initialErrorFields);\r\n\r\n  const checkError = () => {\r\n    if (props.errorHelper !== \"\") {\r\n      setErrorFields({\r\n        error: true,\r\n        email: true,\r\n        name: true,\r\n        password: true,\r\n        passwordConfirm: true,\r\n      });\r\n    }\r\n    if (props.emailHelper !== \"\") {\r\n      setErrorFields({ ...errorFields, email: true });\r\n    }\r\n    if (props.passwordHelper !== \"\") {\r\n      setErrorFields({ ...errorFields, password: true });\r\n    }\r\n    if (props.passwordConfirmHelper !== \"\") {\r\n      setErrorFields({ ...errorFields, password: true, passwordConfirm: true });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setErrorFields(initialErrorFields);\r\n    checkError();\r\n  }, [props.helper]);\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Sign Up</Typography>\r\n      <form noValidate>\r\n        <Grid>\r\n          {props.errorHelper !== \"\" && (\r\n            <Alert severity=\"error\">{props.errorHelper}</Alert>\r\n          )}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.name}\r\n            helperText={props.emailHelper}\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            autoFocus\r\n            onChange={props.handleInputChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.email}\r\n            helperText={props.emailHelper}\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={props.handleInputChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.password}\r\n            helperText={props.passwordHelper}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={props.handleInputChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={errorFields.passwordConfirm}\r\n            helperText={props.passwordConfirmHelper}\r\n            name=\"password_confirmation\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            onChange={props.handleInputChange}\r\n          />\r\n        </Grid>\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          onClick={props.submit}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n        <Link variant=\"body2\" name=\"signIn\" onClick={props.switch}>\r\n          {\"Already have an account? Sign In\"}\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js",["78"],"\r\nimport React, { useState, createContext, useEffect, useReducer } from \"react\";\r\nimport API from '../utils/API'\r\nimport isAuthReducer from '../reducers/isAuthReducer'\r\n\r\nconst AuthState = ({ children }) => {\r\n \r\nconst [state, dispatch] = useReducer(isAuthReducer, {isAuth: undefined})\r\n\r\nconst checkAuth = () => {\r\n  API.checkAuth().then((data) => {\r\n    console.log(\"checkAuth func: \", data.data);\r\n    dispatch({type: data.data})\r\n  })\r\n}\r\nuseEffect(() => {\r\n checkAuth()\r\n}, [])\r\n\r\n  return (\r\n    <IsAuthContext.Provider value={{state, checkAuth}}>\r\n      {children}\r\n    </IsAuthContext.Provider>\r\n  );\r\n};\r\nexport const IsAuthContext = createContext();\r\nexport default AuthState;\r\n","D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\signOut.js",["79"],"import React, {  useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from '../utils/API'\r\nimport { IsAuthContext } from \"./isAuthContext\";\r\n\r\nconst SignOut = () => {\r\n  const {state, checkAuth} = useContext(IsAuthContext);\r\n\r\n  const submitSignOut = (e) => {\r\n    API.signOut().then((res) => {\r\n        console.log(res);\r\n        \r\n    }).then(() => {\r\n      checkAuth();\r\n    })\r\n}\r\n  return (\r\n    \r\n      <Button\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        \r\n        variant=\"contained\"\r\n        onClick={submitSignOut}\r\n      >\r\n        Sign out\r\n      </Button>\r\n   \r\n  );\r\n};\r\n\r\nexport default SignOut;\r\n",["80","81"],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js",[],"D:\\User\\Desktop\\GTbootcamp\\My Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":18,"nodeType":"88","messageId":"89","endLine":2,"endColumn":28},{"ruleId":"90","severity":1,"message":"91","line":32,"column":6,"nodeType":"92","endLine":32,"endColumn":20,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"91","line":38,"column":6,"nodeType":"92","endLine":38,"endColumn":20,"suggestions":"94"},{"ruleId":"86","severity":1,"message":"95","line":2,"column":17,"nodeType":"88","messageId":"89","endLine":2,"endColumn":25},{"ruleId":"86","severity":1,"message":"96","line":7,"column":10,"nodeType":"88","messageId":"89","endLine":7,"endColumn":15},{"ruleId":"82","replacedBy":"97"},{"ruleId":"84","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'lightGreen' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkError' and 'initialErrorFields'. Either include them or remove the dependency array.","ArrayExpression",["101"],["102"],"'useState' is defined but never used.","'state' is assigned a value but never used.",["99"],["100"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"103","fix":"105"},"Update the dependencies array to be: [checkError, initialErrorFields, props.helper]",{"range":"106","text":"107"},{"range":"108","text":"107"},[934,948],"[checkError, initialErrorFields, props.helper]",[1091,1105]]