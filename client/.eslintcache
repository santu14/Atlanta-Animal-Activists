[{"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\index.js":"1","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\App.js":"2","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js":"3","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js":"4","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js":"5","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js":"6","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js":"7","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js":"8","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js":"9","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js":"10","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\index.js":"11","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\keys.js":"12","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js":"13","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js":"14","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js":"15","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js":"16","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js":"17","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\ImgHolder.js":"18"},{"size":396,"mtime":1615498608269,"results":"19","hashOfConfig":"20"},{"size":1506,"mtime":1616778993908,"results":"21","hashOfConfig":"20"},{"size":11601,"mtime":1616706170807,"results":"22","hashOfConfig":"20"},{"size":3647,"mtime":1616780338076,"results":"23","hashOfConfig":"20"},{"size":601,"mtime":1616706728679,"results":"24","hashOfConfig":"20"},{"size":3853,"mtime":1616780901076,"results":"25","hashOfConfig":"20"},{"size":1450,"mtime":1615502550952,"results":"26","hashOfConfig":"20"},{"size":661,"mtime":1615498608239,"results":"27","hashOfConfig":"20"},{"size":3717,"mtime":1616705812318,"results":"28","hashOfConfig":"20"},{"size":1465,"mtime":1616706170806,"results":"29","hashOfConfig":"20"},{"size":929,"mtime":1616701937924,"results":"30","hashOfConfig":"20"},{"size":188,"mtime":1616698210861,"results":"31","hashOfConfig":"20"},{"size":1129,"mtime":1616697507306,"results":"32","hashOfConfig":"20"},{"size":612,"mtime":1615499097522,"results":"33","hashOfConfig":"20"},{"size":449,"mtime":1615498608270,"results":"34","hashOfConfig":"20"},{"size":3212,"mtime":1615498608237,"results":"35","hashOfConfig":"20"},{"size":2243,"mtime":1615498608237,"results":"36","hashOfConfig":"20"},{"size":562,"mtime":1616701937924,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ubnh4b",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\index.js",[],["81","82"],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\App.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\index.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Header.js",["83"],"import React, { useContext, useState } from \"react\";\nimport {\n  AppBar,\n  List,\n  ListItem,\n  ListItemText,\n  Button,\n  IconButton,\n  Toolbar,\n  Container,\n  Hidden,\n  Menu,\n  MenuItem,\n  Fade,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport useStyles from \"./Styles\";\nimport { IsAuthContext } from \"../AuthForm/isAuthContext\";\nimport SignOut from \"../AuthForm/SignOut\";\nimport Logo from \"./assets/img/logo.png\";\n\nconst Nav = () => {\n  const classes = useStyles();\n  const { state } = useContext(IsAuthContext);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const navLinks = [\n    { title: `About`, path: `/about` },\n    { title: `Participate`, path: `/participate` },\n    { title: `Events`, path: `/events` },\n    { title: `Gallery`, path: `/gallery` },\n    { title: `Contact`, path: `/contact` },\n  ];\n  return (\n    <AppBar container position=\"static\" className={classes.nav}>\n      <Toolbar>\n        <Container maxWidth=\"xl\" className={classes.navDisplayFlex}>\n          <IconButton edge=\"start\" aria-label=\"home\">\n            <img\n              className={classes.logo}\n              src={Logo}\n              alt=\"Atlanta Animal Activists\"\n            />\n          </IconButton>\n          {/* ----------------Regular menu ----------------------------- */}\n\n          <Hidden xsDown>\n            <List className={classes.navList}\n              component=\"nav\"\n              aria-labelledby=\"main navigation\"\n              className={classes.linkDisplay}\n            >\n              {navLinks.map(({ title, path }) => (\n                <a\n                  href={path}\n                  key={title}\n                  className={classes.linkText}\n                  style={{}}\n                >\n                  <ListItem button>\n                    <ListItemText primary={title} />\n                  </ListItem>\n                </a>\n              ))}\n              <Button className={classes.navDonateBtn}\n                color=\"primary\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Donate\n              </Button>\n              {state.isAuth === true && <SignOut />}\n              \n            </List>\n          </Hidden>\n\n          {/* ----------------Hamburger menu ----------------------------- */}\n          <Hidden smUp>\n            <IconButton\n              aria-controls=\"fade-menu\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              <MenuIcon />\n            </IconButton>\n\n            <Menu\n              id=\"fade-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n              TransitionComponent={Fade}\n            >\n              {navLinks.map(({ title, path }) => (\n                // <a href={path} key={title} className={classes.linkText}>\n                <MenuItem href={path} onClick={handleClose} className={classes.menuSelections}>\n                  {title}\n                </MenuItem>\n                // </a>\n              ))}\n              <MenuItem onClick={handleClose}>\n                <Button color=\"primary\" type=\"submit\" fullWidth variant=\"contained\">\n                  Donate\n                </Button>\n              </MenuItem>\n              {state.isAuth === true && <MenuItem onClick={handleClose}><SignOut /></MenuItem>}\n            </Menu>\n          </Hidden>\n        </Container>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Nav;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Jumbotron.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Styles.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Theme.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\isAuthContext.js",["84"],"\nimport React, { useState, createContext, useEffect, useReducer } from \"react\";\nimport API from '../utils/API'\nimport isAuthReducer from '../reducers/isAuthReducer'\n\nconst AuthState = ({ children }) => {\n \nconst [state, dispatch] = useReducer(isAuthReducer, {isAuth: undefined})\n\nconst checkAuth = () => {\n  API.checkAuth().then((data) => {\n    console.log(\"checkAuth func: \", data.data);\n    dispatch({type: data.data})\n  })\n}\nuseEffect(() => {\n checkAuth()\n}, [])\n\n  return (\n    <IsAuthContext.Provider value={{state, checkAuth}}>\n      {children}\n    </IsAuthContext.Provider>\n  );\n};\nexport const IsAuthContext = createContext();\nexport default AuthState;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\index.js",["85"],"import React, { useState, useContext, useEffect } from \"react\";\nimport API from \"../utils/API\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\n\nimport { IsAuthContext } from \"./isAuthContext\";\n\nconst AuthForm = () => {\n\n  \n    // ------------------------------- Auth -------------------------------------------------\n  const initialFormState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n  // Set up our useState hook\n  const [formState, setFormState] = useState(initialFormState);\n\n  // Bring in our global context items for checking authorization status\n  const { checkAuth } = useContext(IsAuthContext);\n\n  // On change event handler\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  //  Sign In button handler\n  const submitSignIn = (e) => {\n    e.preventDefault();\n    const { email, password } = formState;\n    setHelperText(initialHelperState);\n    console.log({ email: email, password: password });\n\n    API.signIn({ email: email, password: password }).then(({ data }) => {\n        console.log(\"data: \", data);\n        errorHandler(data);\n        checkAuth();\n    });\n  };\n  //  Sign Up button handler\n\n  const submitSignUp = (e) => {\n    e.preventDefault();\n    const { name, email, password, password_confirmation } = formState;\n    setHelperText(initialHelperState);\n    console.log({ email: email, password: password });\n\n    API.signUp({\n      name: name,\n      email: email,\n      password: password,\n      password_confirmation: password_confirmation,\n    }).then((res) => {\n      console.log(res.data);\n      errorHandler(res.data);\n      checkAuth();\n      \n    });\n  };\n  // ----------------------- Form switch -----------------------------\n\n  const [formType, setFormType] = useState(\"signUp\");\n  \n  // Function for switching between forms\n  const switchForm = (e) => {\n    e.preventDefault();\n    setHelperText(initialHelperState)\n    setFormType(e.target.name);\n  };\n\n  // ----------------------- Error handling -----------------------------\n\n  const initialHelperState = {\n        error: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirm: \"\"\n  };\n  const [helperText, setHelperText] = useState(initialHelperState);\n\n  \n  const errorHandler =  (res) => {\n    const  error =  res.errors;\n    console.log(\"current errors: \", error);\n    console.log(\"current text: \", helperText);\n    // if we have errors we push them to our helperText state\n    if (error){\n        error.forEach(err => {\n            if (err.error) {setHelperText({...helperText, error: err.error})}\n            if (err.email) {setHelperText({...helperText,email: err.email})}\n            if (err.password) {setHelperText({...helperText, password: err.password})}\n            if (err.passwordConfirm) {setHelperText({...helperText, passwordConfirm: err.passwordConfirm})}\n             \n        });\n    } \n   \n  };\n \n  const { error, email, password, passwordConfirm } = helperText;\n  \n  return (\n    <div>\n      {formType === \"signIn\" && (\n        <SignIn\n          handleInputChange={handleInputChange}\n          submit={submitSignIn}\n          switch={switchForm}\n          helper={helperText}\n          errorHelper={error}\n          emailHelper={email}\n          passwordHelper={password}\n\n        />\n      )}\n      {formType === \"signUp\" && (\n        <SignUp\n          handleInputChange={handleInputChange}\n          submit={submitSignUp}\n          switch={switchForm}\n          helper={helperText}\n          errorHelper={error}\n          emailHelper={email}\n          passwordHelper={password}\n          passwordConfirmHelper={passwordConfirm}\n\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AuthForm;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\ImageUploader\\UploadBox.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\index.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\keys.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\utils\\API.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignOut.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\reducers\\isAuthReducer.js",[],"C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignUp.js",["86"],"import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Grid, Link } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst SignUp = (props) => {\n  const initialErrorFields = {\n    error: false,\n    email: false,\n    name: false,\n    password: false,\n    passwordConfirm: false\n  };\n  const [errorFields, setErrorFields] = useState(initialErrorFields);\n\n  const checkError = () => {\n    if (props.errorHelper !== \"\") {\n      setErrorFields({\n        error: true,\n        email: true,\n        name: true,\n        password: true,\n        passwordConfirm: true,\n      });\n    }\n    if (props.emailHelper !== \"\") {\n      setErrorFields({ ...errorFields, email: true });\n    }\n    if (props.passwordHelper !== \"\") {\n      setErrorFields({ ...errorFields, password: true });\n    }\n    if (props.passwordConfirmHelper !== \"\") {\n      setErrorFields({ ...errorFields, password: true, passwordConfirm: true });\n    }\n  };\n  useEffect(() => {\n    setErrorFields(initialErrorFields);\n    checkError();\n  }, [props.helper]);\n  return (\n    <div>\n      <Typography variant=\"h5\">Sign Up</Typography>\n      <form noValidate>\n        <Grid>\n          {props.errorHelper !== \"\" && (\n            <Alert severity=\"error\">{props.errorHelper}</Alert>\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.name}\n            helperText={props.emailHelper}\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            autoFocus\n            onChange={props.handleInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.email}\n            helperText={props.emailHelper}\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onChange={props.handleInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.password}\n            helperText={props.passwordHelper}\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            onChange={props.handleInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={errorFields.passwordConfirm}\n            helperText={props.passwordConfirmHelper}\n            name=\"password_confirmation\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            onChange={props.handleInputChange}\n          />\n        </Grid>\n\n        <Button\n          color=\"primary\"\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          onClick={props.submit}\n        >\n          Sign Up\n        </Button>\n        <Link variant=\"body2\" name=\"signIn\" onClick={props.switch}>\n          {\"Already have an account? Sign In\"}\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\AuthForm\\SignIn.js",["87"],"import React, {useState, useEffect} from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Alert from '@material-ui/lab/Alert';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst SignIn = (props) => {\n  const initialErrorFields = {\n    error: false,\n    email: false,\n    password: false,\n};\n  const [errorFields, setErrorFields] = useState(initialErrorFields)\n\n  const checkError = () => {\n    \n    if(props.errorHelper !== \"\"){\n      setErrorFields({error: true, email: true, password: true})\n    }\n    if(props.emailHelper !== \"\"){\n      setErrorFields({...errorFields, email: true})\n    }\n    if(props.passwordHelper !== \"\"){\n      setErrorFields({...errorFields, password: true})\n    }\n     \n  }\n  useEffect(() => {\n    setErrorFields(initialErrorFields);\n    checkError()\n  }, [props.helper])\n  \n  return (\n    <div>\n      <Typography variant=\"h5\">Sign In</Typography>\n      <form noValidate>\n        {\n        props.errorHelper !== \"\" && \n        <Alert severity=\"error\">{props.errorHelper}</Alert>\n        }\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          error={errorFields.email}\n          helperText={props.emailHelper}\n          fullWidth\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n          onChange={props.handleInputChange}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          error={errorFields.password}\n          helperText={props.passwordHelper}\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          onChange={props.handleInputChange}\n        />\n\n        <Button\n          color=\"primary\"\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          onClick={props.submit}\n        >\n          Sign In\n        </Button>\n        <Link variant=\"body2\" name=\"signUp\" onClick={props.switch}>\n          {\"Don't have an account? Sign Up\"}\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n","C:\\Users\\eugen\\Desktop\\Coding\\Repos\\Atlanta-Animal-Activists\\client\\src\\components\\Gallery\\ImgHolder.js",["88"],"import React from \"react\";\nimport { Paper, Button, Container } from \"@material-ui/core\";\nimport useStyles from \"../Styles\";\nconst ImgHolder = (props) => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <Paper variant=\"outlined\" className={classes.galleryImgCard} square>\n        <img src={props.imgurl} className={classes.galleryImgDisplay} alt=\"img\" />\n        <div className={classes.imgTextDiv}>\n\n          <h3 className={classes.imgText}>{props.imgname}</h3>\n        </div>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default ImgHolder;\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":60,"column":15,"nodeType":"95","endLine":60,"endColumn":46},{"ruleId":"96","severity":1,"message":"97","line":2,"column":17,"nodeType":"98","messageId":"99","endLine":2,"endColumn":25},{"ruleId":"96","severity":1,"message":"100","line":1,"column":39,"nodeType":"98","messageId":"99","endLine":1,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":38,"column":6,"nodeType":"103","endLine":38,"endColumn":20,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"102","line":32,"column":6,"nodeType":"103","endLine":32,"endColumn":20,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"106","line":2,"column":17,"nodeType":"98","messageId":"99","endLine":2,"endColumn":23},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkError' and 'initialErrorFields'. Either include them or remove the dependency array.","ArrayExpression",["109"],["110"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"111","fix":"113"},"Update the dependencies array to be: [checkError, initialErrorFields, props.helper]",{"range":"114","text":"115"},{"range":"116","text":"115"},[1054,1068],"[checkError, initialErrorFields, props.helper]",[903,917]]